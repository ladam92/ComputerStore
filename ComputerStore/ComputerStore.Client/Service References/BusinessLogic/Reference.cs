//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComputerStore.Client.BusinessLogic {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BusinessLogic.ILogic")]
    public interface ILogic {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Eger_GetByUsbID", ReplyAction="http://tempuri.org/ILogic/Eger_GetByUsbIDResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Eger> Eger_GetByUsbID(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Eger_GetByUsbID", ReplyAction="http://tempuri.org/ILogic/Eger_GetByUsbIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Eger>> Eger_GetByUsbIDAsync(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Eger_GetByPs", ReplyAction="http://tempuri.org/ILogic/Eger_GetByPsResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Eger> Eger_GetByPs(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Eger_GetByPs", ReplyAction="http://tempuri.org/ILogic/Eger_GetByPsResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Eger>> Eger_GetByPsAsync(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Hattertar_GetByHattertarTipus", ReplyAction="http://tempuri.org/ILogic/Hattertar_GetByHattertarTipusResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Hattertar> Hattertar_GetByHattertarTipus(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Hattertar_GetByHattertarTipus", ReplyAction="http://tempuri.org/ILogic/Hattertar_GetByHattertarTipusResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Hattertar>> Hattertar_GetByHattertarTipusAsync(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Hattertar_GetByHattertarCsatolo", ReplyAction="http://tempuri.org/ILogic/Hattertar_GetByHattertarCsatoloResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Hattertar> Hattertar_GetByHattertarCsatolo(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Hattertar_GetByHattertarCsatolo", ReplyAction="http://tempuri.org/ILogic/Hattertar_GetByHattertarCsatoloResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Hattertar>> Hattertar_GetByHattertarCsatoloAsync(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Memoria_GetByFoglalat", ReplyAction="http://tempuri.org/ILogic/Memoria_GetByFoglalatResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Memoria> Memoria_GetByFoglalat(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Memoria_GetByFoglalat", ReplyAction="http://tempuri.org/ILogic/Memoria_GetByFoglalatResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Memoria>> Memoria_GetByFoglalatAsync(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Memoria_GetListByFoglalat", ReplyAction="http://tempuri.org/ILogic/Memoria_GetListByFoglalatResponse")]
        ComputerStore.DTO.Types.Memoria[] Memoria_GetListByFoglalat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Memoria_GetListByFoglalat", ReplyAction="http://tempuri.org/ILogic/Memoria_GetListByFoglalatResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Memoria[]> Memoria_GetListByFoglalatAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Monitor_GetByMeret", ReplyAction="http://tempuri.org/ILogic/Monitor_GetByMeretResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Monitor> Monitor_GetByMeret(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Monitor_GetByMeret", ReplyAction="http://tempuri.org/ILogic/Monitor_GetByMeretResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Monitor>> Monitor_GetByMeretAsync(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Monitor_GetByFelbontas", ReplyAction="http://tempuri.org/ILogic/Monitor_GetByFelbontasResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Monitor> Monitor_GetByFelbontas(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Monitor_GetByFelbontas", ReplyAction="http://tempuri.org/ILogic/Monitor_GetByFelbontasResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Monitor>> Monitor_GetByFelbontasAsync(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Processzor_GetByFoglalat", ReplyAction="http://tempuri.org/ILogic/Processzor_GetByFoglalatResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Processzor> Processzor_GetByFoglalat(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Processzor_GetByFoglalat", ReplyAction="http://tempuri.org/ILogic/Processzor_GetByFoglalatResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Processzor>> Processzor_GetByFoglalatAsync(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Processzor_GetListByFoglalat", ReplyAction="http://tempuri.org/ILogic/Processzor_GetListByFoglalatResponse")]
        ComputerStore.DTO.Types.Processzor[] Processzor_GetListByFoglalat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Processzor_GetListByFoglalat", ReplyAction="http://tempuri.org/ILogic/Processzor_GetListByFoglalatResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Processzor[]> Processzor_GetListByFoglalatAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Szamitogephaz_Get", ReplyAction="http://tempuri.org/ILogic/Szamitogephaz_GetResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Szamitogephaz> Szamitogephaz_Get(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Szamitogephaz_Get", ReplyAction="http://tempuri.org/ILogic/Szamitogephaz_GetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Szamitogephaz>> Szamitogephaz_GetAsync(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Tapegyseg_Get", ReplyAction="http://tempuri.org/ILogic/Tapegyseg_GetResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Tapegyseg> Tapegyseg_Get(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Tapegyseg_Get", ReplyAction="http://tempuri.org/ILogic/Tapegyseg_GetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Tapegyseg>> Tapegyseg_GetAsync(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Videokartya_Get", ReplyAction="http://tempuri.org/ILogic/Videokartya_GetResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Videokartya> Videokartya_Get(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Videokartya_Get", ReplyAction="http://tempuri.org/ILogic/Videokartya_GetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Videokartya>> Videokartya_GetAsync(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/PCIExpress_GetByName", ReplyAction="http://tempuri.org/ILogic/PCIExpress_GetByNameResponse")]
        ComputerStore.DTO.Types.PciExpressTipus[] PCIExpress_GetByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/PCIExpress_GetByName", ReplyAction="http://tempuri.org/ILogic/PCIExpress_GetByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PciExpressTipus[]> PCIExpress_GetByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/PCIExpress_GetByID", ReplyAction="http://tempuri.org/ILogic/PCIExpress_GetByIDResponse")]
        ComputerStore.DTO.Types.PciExpressTipus PCIExpress_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/PCIExpress_GetByID", ReplyAction="http://tempuri.org/ILogic/PCIExpress_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PciExpressTipus> PCIExpress_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/PCIExpress_Update", ReplyAction="http://tempuri.org/ILogic/PCIExpress_UpdateResponse")]
        void PCIExpress_Update(ComputerStore.DTO.Types.PciExpressTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/PCIExpress_Update", ReplyAction="http://tempuri.org/ILogic/PCIExpress_UpdateResponse")]
        System.Threading.Tasks.Task PCIExpress_UpdateAsync(ComputerStore.DTO.Types.PciExpressTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/PCIExpress_Add", ReplyAction="http://tempuri.org/ILogic/PCIExpress_AddResponse")]
        void PCIExpress_Add(ComputerStore.DTO.Types.PciExpressTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/PCIExpress_Add", ReplyAction="http://tempuri.org/ILogic/PCIExpress_AddResponse")]
        System.Threading.Tasks.Task PCIExpress_AddAsync(ComputerStore.DTO.Types.PciExpressTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcesszorFoglalat_GetByName", ReplyAction="http://tempuri.org/ILogic/ProcesszorFoglalat_GetByNameResponse")]
        ComputerStore.DTO.Types.ProcesszorFoglalatTipus[] ProcesszorFoglalat_GetByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcesszorFoglalat_GetByName", ReplyAction="http://tempuri.org/ILogic/ProcesszorFoglalat_GetByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus[]> ProcesszorFoglalat_GetByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcesszorFoglalat_GetByID", ReplyAction="http://tempuri.org/ILogic/ProcesszorFoglalat_GetByIDResponse")]
        ComputerStore.DTO.Types.ProcesszorFoglalatTipus ProcesszorFoglalat_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcesszorFoglalat_GetByID", ReplyAction="http://tempuri.org/ILogic/ProcesszorFoglalat_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus> ProcesszorFoglalat_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/VgaCsatolo_GetByName", ReplyAction="http://tempuri.org/ILogic/VgaCsatolo_GetByNameResponse")]
        ComputerStore.DTO.Types.VgaCsatoloFeluletTipus[] VgaCsatolo_GetByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/VgaCsatolo_GetByName", ReplyAction="http://tempuri.org/ILogic/VgaCsatolo_GetByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.VgaCsatoloFeluletTipus[]> VgaCsatolo_GetByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/VgaCsatolo_GetByID", ReplyAction="http://tempuri.org/ILogic/VgaCsatolo_GetByIDResponse")]
        ComputerStore.DTO.Types.VgaCsatoloFeluletTipus VgaCsatolo_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/VgaCsatolo_GetByID", ReplyAction="http://tempuri.org/ILogic/VgaCsatolo_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.VgaCsatoloFeluletTipus> VgaCsatolo_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/VgaCsatolo_Update", ReplyAction="http://tempuri.org/ILogic/VgaCsatolo_UpdateResponse")]
        void VgaCsatolo_Update(ComputerStore.DTO.Types.VgaCsatoloFeluletTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/VgaCsatolo_Update", ReplyAction="http://tempuri.org/ILogic/VgaCsatolo_UpdateResponse")]
        System.Threading.Tasks.Task VgaCsatolo_UpdateAsync(ComputerStore.DTO.Types.VgaCsatoloFeluletTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/VgaCsatolo_Add", ReplyAction="http://tempuri.org/ILogic/VgaCsatolo_AddResponse")]
        void VgaCsatolo_Add(ComputerStore.DTO.Types.VgaCsatoloFeluletTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/VgaCsatolo_Add", ReplyAction="http://tempuri.org/ILogic/VgaCsatolo_AddResponse")]
        System.Threading.Tasks.Task VgaCsatolo_AddAsync(ComputerStore.DTO.Types.VgaCsatoloFeluletTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Gyarto_GetByName", ReplyAction="http://tempuri.org/ILogic/Gyarto_GetByNameResponse")]
        ComputerStore.DTO.Types.AlkatreszGyarto[] Gyarto_GetByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Gyarto_GetByName", ReplyAction="http://tempuri.org/ILogic/Gyarto_GetByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.AlkatreszGyarto[]> Gyarto_GetByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Gyarto_GetByID", ReplyAction="http://tempuri.org/ILogic/Gyarto_GetByIDResponse")]
        ComputerStore.DTO.Types.AlkatreszGyarto Gyarto_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Gyarto_GetByID", ReplyAction="http://tempuri.org/ILogic/Gyarto_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.AlkatreszGyarto> Gyarto_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Gyarto_Update", ReplyAction="http://tempuri.org/ILogic/Gyarto_UpdateResponse")]
        void Gyarto_Update(ComputerStore.DTO.Types.AlkatreszGyarto type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Gyarto_Update", ReplyAction="http://tempuri.org/ILogic/Gyarto_UpdateResponse")]
        System.Threading.Tasks.Task Gyarto_UpdateAsync(ComputerStore.DTO.Types.AlkatreszGyarto type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Gyarto_Add", ReplyAction="http://tempuri.org/ILogic/Gyarto_AddResponse")]
        void Gyarto_Add(ComputerStore.DTO.Types.AlkatreszGyarto type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Gyarto_Add", ReplyAction="http://tempuri.org/ILogic/Gyarto_AddResponse")]
        System.Threading.Tasks.Task Gyarto_AddAsync(ComputerStore.DTO.Types.AlkatreszGyarto type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorCsatolo_GetByName", ReplyAction="http://tempuri.org/ILogic/MonitorCsatolo_GetByNameResponse")]
        ComputerStore.DTO.Types.MonitorCsatoloTipus[] MonitorCsatolo_GetByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorCsatolo_GetByName", ReplyAction="http://tempuri.org/ILogic/MonitorCsatolo_GetByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorCsatoloTipus[]> MonitorCsatolo_GetByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorCsatolo_GetByID", ReplyAction="http://tempuri.org/ILogic/MonitorCsatolo_GetByIDResponse")]
        ComputerStore.DTO.Types.MonitorCsatoloTipus MonitorCsatolo_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorCsatolo_GetByID", ReplyAction="http://tempuri.org/ILogic/MonitorCsatolo_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorCsatoloTipus> MonitorCsatolo_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorCsatolo_Update", ReplyAction="http://tempuri.org/ILogic/MonitorCsatolo_UpdateResponse")]
        void MonitorCsatolo_Update(ComputerStore.DTO.Types.MonitorCsatoloTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorCsatolo_Update", ReplyAction="http://tempuri.org/ILogic/MonitorCsatolo_UpdateResponse")]
        System.Threading.Tasks.Task MonitorCsatolo_UpdateAsync(ComputerStore.DTO.Types.MonitorCsatoloTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorCsatolo_Add", ReplyAction="http://tempuri.org/ILogic/MonitorCsatolo_AddResponse")]
        void MonitorCsatolo_Add(ComputerStore.DTO.Types.MonitorCsatoloTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorCsatolo_Add", ReplyAction="http://tempuri.org/ILogic/MonitorCsatolo_AddResponse")]
        System.Threading.Tasks.Task MonitorCsatolo_AddAsync(ComputerStore.DTO.Types.MonitorCsatoloTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Alaplap_GetByID", ReplyAction="http://tempuri.org/ILogic/Alaplap_GetByIDResponse")]
        ComputerStore.DTO.Types.Alaplap Alaplap_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Alaplap_GetByID", ReplyAction="http://tempuri.org/ILogic/Alaplap_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Alaplap> Alaplap_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Billentyuzet_GetByID", ReplyAction="http://tempuri.org/ILogic/Billentyuzet_GetByIDResponse")]
        ComputerStore.DTO.Types.Billentyuzet Billentyuzet_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Billentyuzet_GetByID", ReplyAction="http://tempuri.org/ILogic/Billentyuzet_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Billentyuzet> Billentyuzet_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Eger_GetByID", ReplyAction="http://tempuri.org/ILogic/Eger_GetByIDResponse")]
        ComputerStore.DTO.Types.Eger Eger_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Eger_GetByID", ReplyAction="http://tempuri.org/ILogic/Eger_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Eger> Eger_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Hattertar_GetByID", ReplyAction="http://tempuri.org/ILogic/Hattertar_GetByIDResponse")]
        ComputerStore.DTO.Types.Hattertar Hattertar_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Hattertar_GetByID", ReplyAction="http://tempuri.org/ILogic/Hattertar_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Hattertar> Hattertar_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Memoria_GetByID", ReplyAction="http://tempuri.org/ILogic/Memoria_GetByIDResponse")]
        ComputerStore.DTO.Types.Memoria Memoria_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Memoria_GetByID", ReplyAction="http://tempuri.org/ILogic/Memoria_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Memoria> Memoria_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Monitor_GetByID", ReplyAction="http://tempuri.org/ILogic/Monitor_GetByIDResponse")]
        ComputerStore.DTO.Types.Monitor Monitor_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Monitor_GetByID", ReplyAction="http://tempuri.org/ILogic/Monitor_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Monitor> Monitor_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Processzor_GetByID", ReplyAction="http://tempuri.org/ILogic/Processzor_GetByIDResponse")]
        ComputerStore.DTO.Types.Processzor Processzor_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Processzor_GetByID", ReplyAction="http://tempuri.org/ILogic/Processzor_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Processzor> Processzor_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Szamitogephaz_GetByID", ReplyAction="http://tempuri.org/ILogic/Szamitogephaz_GetByIDResponse")]
        ComputerStore.DTO.Types.Szamitogephaz Szamitogephaz_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Szamitogephaz_GetByID", ReplyAction="http://tempuri.org/ILogic/Szamitogephaz_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Szamitogephaz> Szamitogephaz_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Tapegyseg_GetByID", ReplyAction="http://tempuri.org/ILogic/Tapegyseg_GetByIDResponse")]
        ComputerStore.DTO.Types.Tapegyseg Tapegyseg_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Tapegyseg_GetByID", ReplyAction="http://tempuri.org/ILogic/Tapegyseg_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Tapegyseg> Tapegyseg_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Videokartya_GetByID", ReplyAction="http://tempuri.org/ILogic/Videokartya_GetByIDResponse")]
        ComputerStore.DTO.Types.Videokartya Videokartya_GetByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Videokartya_GetByID", ReplyAction="http://tempuri.org/ILogic/Videokartya_GetByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Videokartya> Videokartya_GetByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Videokartya_GetList", ReplyAction="http://tempuri.org/ILogic/Videokartya_GetListResponse")]
        ComputerStore.DTO.Types.Videokartya[] Videokartya_GetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Videokartya_GetList", ReplyAction="http://tempuri.org/ILogic/Videokartya_GetListResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Videokartya[]> Videokartya_GetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteAlaplap", ReplyAction="http://tempuri.org/ILogic/DeleteAlaplapResponse")]
        void DeleteAlaplap(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteAlaplap", ReplyAction="http://tempuri.org/ILogic/DeleteAlaplapResponse")]
        System.Threading.Tasks.Task DeleteAlaplapAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteBillentyuzet", ReplyAction="http://tempuri.org/ILogic/DeleteBillentyuzetResponse")]
        void DeleteBillentyuzet(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteBillentyuzet", ReplyAction="http://tempuri.org/ILogic/DeleteBillentyuzetResponse")]
        System.Threading.Tasks.Task DeleteBillentyuzetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteEger", ReplyAction="http://tempuri.org/ILogic/DeleteEgerResponse")]
        void DeleteEger(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteEger", ReplyAction="http://tempuri.org/ILogic/DeleteEgerResponse")]
        System.Threading.Tasks.Task DeleteEgerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteHattertar", ReplyAction="http://tempuri.org/ILogic/DeleteHattertarResponse")]
        void DeleteHattertar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteHattertar", ReplyAction="http://tempuri.org/ILogic/DeleteHattertarResponse")]
        System.Threading.Tasks.Task DeleteHattertarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteMemoria", ReplyAction="http://tempuri.org/ILogic/DeleteMemoriaResponse")]
        void DeleteMemoria(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteMemoria", ReplyAction="http://tempuri.org/ILogic/DeleteMemoriaResponse")]
        System.Threading.Tasks.Task DeleteMemoriaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteMonitor", ReplyAction="http://tempuri.org/ILogic/DeleteMonitorResponse")]
        void DeleteMonitor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteMonitor", ReplyAction="http://tempuri.org/ILogic/DeleteMonitorResponse")]
        System.Threading.Tasks.Task DeleteMonitorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteProcesszor", ReplyAction="http://tempuri.org/ILogic/DeleteProcesszorResponse")]
        void DeleteProcesszor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteProcesszor", ReplyAction="http://tempuri.org/ILogic/DeleteProcesszorResponse")]
        System.Threading.Tasks.Task DeleteProcesszorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteSzamitogephaz", ReplyAction="http://tempuri.org/ILogic/DeleteSzamitogephazResponse")]
        void DeleteSzamitogephaz(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteSzamitogephaz", ReplyAction="http://tempuri.org/ILogic/DeleteSzamitogephazResponse")]
        System.Threading.Tasks.Task DeleteSzamitogephazAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteTapegyseg", ReplyAction="http://tempuri.org/ILogic/DeleteTapegysegResponse")]
        void DeleteTapegyseg(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteTapegyseg", ReplyAction="http://tempuri.org/ILogic/DeleteTapegysegResponse")]
        System.Threading.Tasks.Task DeleteTapegysegAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteVideokartya", ReplyAction="http://tempuri.org/ILogic/DeleteVideokartyaResponse")]
        void DeleteVideokartya(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/DeleteVideokartya", ReplyAction="http://tempuri.org/ILogic/DeleteVideokartyaResponse")]
        System.Threading.Tasks.Task DeleteVideokartyaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Hattertar_GetListByAlaplapAndTipus", ReplyAction="http://tempuri.org/ILogic/Hattertar_GetListByAlaplapAndTipusResponse")]
        ComputerStore.DTO.Types.Hattertar[] Hattertar_GetListByAlaplapAndTipus(int alaplapId, int tipus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Hattertar_GetListByAlaplapAndTipus", ReplyAction="http://tempuri.org/ILogic/Hattertar_GetListByAlaplapAndTipusResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Hattertar[]> Hattertar_GetListByAlaplapAndTipusAsync(int alaplapId, int tipus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Alaplap_GetUsbTipusok", ReplyAction="http://tempuri.org/ILogic/Alaplap_GetUsbTipusokResponse")]
        ComputerStore.DTO.Types.UsbTipus[] Alaplap_GetUsbTipusok(int alaplapID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Alaplap_GetUsbTipusok", ReplyAction="http://tempuri.org/ILogic/Alaplap_GetUsbTipusokResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.UsbTipus[]> Alaplap_GetUsbTipusokAsync(int alaplapID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Billentyuzet_GetListByUsb", ReplyAction="http://tempuri.org/ILogic/Billentyuzet_GetListByUsbResponse")]
        ComputerStore.DTO.Types.Billentyuzet[] Billentyuzet_GetListByUsb(int usbID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Billentyuzet_GetListByUsb", ReplyAction="http://tempuri.org/ILogic/Billentyuzet_GetListByUsbResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Billentyuzet[]> Billentyuzet_GetListByUsbAsync(int usbID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Billentyuzet_GetListPS2", ReplyAction="http://tempuri.org/ILogic/Billentyuzet_GetListPS2Response")]
        ComputerStore.DTO.Types.Billentyuzet[] Billentyuzet_GetListPS2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Billentyuzet_GetListPS2", ReplyAction="http://tempuri.org/ILogic/Billentyuzet_GetListPS2Response")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Billentyuzet[]> Billentyuzet_GetListPS2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Eger_GetListByUsb", ReplyAction="http://tempuri.org/ILogic/Eger_GetListByUsbResponse")]
        ComputerStore.DTO.Types.Eger[] Eger_GetListByUsb(int usbID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Eger_GetListByUsb", ReplyAction="http://tempuri.org/ILogic/Eger_GetListByUsbResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Eger[]> Eger_GetListByUsbAsync(int usbID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Eger_GetListPS2", ReplyAction="http://tempuri.org/ILogic/Eger_GetListPS2Response")]
        ComputerStore.DTO.Types.Eger[] Eger_GetListPS2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Eger_GetListPS2", ReplyAction="http://tempuri.org/ILogic/Eger_GetListPS2Response")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Eger[]> Eger_GetListPS2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/SzamitogepHaz_GetList", ReplyAction="http://tempuri.org/ILogic/SzamitogepHaz_GetListResponse")]
        ComputerStore.DTO.Types.Szamitogephaz[] SzamitogepHaz_GetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/SzamitogepHaz_GetList", ReplyAction="http://tempuri.org/ILogic/SzamitogepHaz_GetListResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Szamitogephaz[]> SzamitogepHaz_GetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Tapegyseg_GetList", ReplyAction="http://tempuri.org/ILogic/Tapegyseg_GetListResponse")]
        ComputerStore.DTO.Types.Tapegyseg[] Tapegyseg_GetList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Tapegyseg_GetList", ReplyAction="http://tempuri.org/ILogic/Tapegyseg_GetListResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Tapegyseg[]> Tapegyseg_GetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Monitor_GetListByMeret", ReplyAction="http://tempuri.org/ILogic/Monitor_GetListByMeretResponse")]
        ComputerStore.DTO.Types.Monitor[] Monitor_GetListByMeret(int meretID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Monitor_GetListByMeret", ReplyAction="http://tempuri.org/ILogic/Monitor_GetListByMeretResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Monitor[]> Monitor_GetListByMeretAsync(int meretID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/USBGetByAlaplapID", ReplyAction="http://tempuri.org/ILogic/USBGetByAlaplapIDResponse")]
        ComputerStore.DTO.Types.AlaplapUSB USBGetByAlaplapID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/USBGetByAlaplapID", ReplyAction="http://tempuri.org/ILogic/USBGetByAlaplapIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.AlaplapUSB> USBGetByAlaplapIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertarGetByAlaplapID", ReplyAction="http://tempuri.org/ILogic/HattertarGetByAlaplapIDResponse")]
        ComputerStore.DTO.Types.AlaplapHatter HattertarGetByAlaplapID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertarGetByAlaplapID", ReplyAction="http://tempuri.org/ILogic/HattertarGetByAlaplapIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.AlaplapHatter> HattertarGetByAlaplapIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorcsatoloGetByVideokartyaID", ReplyAction="http://tempuri.org/ILogic/MonitorcsatoloGetByVideokartyaIDResponse")]
        ComputerStore.DTO.Types.VideokartyaMon MonitorcsatoloGetByVideokartyaID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorcsatoloGetByVideokartyaID", ReplyAction="http://tempuri.org/ILogic/MonitorcsatoloGetByVideokartyaIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.VideokartyaMon> MonitorcsatoloGetByVideokartyaIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingVideokartyaDB", ReplyAction="http://tempuri.org/ILogic/InsertingVideokartyaDBResponse")]
        void InsertingVideokartyaDB(int csatolo_id, int mondb, int gyarto_id, int memoria_id, string megnev, int ar, int db, int meret, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingVideokartyaDB", ReplyAction="http://tempuri.org/ILogic/InsertingVideokartyaDBResponse")]
        System.Threading.Tasks.Task InsertingVideokartyaDBAsync(int csatolo_id, int mondb, int gyarto_id, int memoria_id, string megnev, int ar, int db, int meret, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingTapegysegDB", ReplyAction="http://tempuri.org/ILogic/InsertingTapegysegDBResponse")]
        void InsertingTapegysegDB(int gyarto_id, string megnev, int ar, int db, int telj, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingTapegysegDB", ReplyAction="http://tempuri.org/ILogic/InsertingTapegysegDBResponse")]
        System.Threading.Tasks.Task InsertingTapegysegDBAsync(int gyarto_id, string megnev, int ar, int db, int telj, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingSzamitogephazDB", ReplyAction="http://tempuri.org/ILogic/InsertingSzamitogephazDBResponse")]
        void InsertingSzamitogephazDB(int gyarto_id, string megnev, int ar, int db, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingSzamitogephazDB", ReplyAction="http://tempuri.org/ILogic/InsertingSzamitogephazDBResponse")]
        System.Threading.Tasks.Task InsertingSzamitogephazDBAsync(int gyarto_id, string megnev, int ar, int db, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingProcesszorDB", ReplyAction="http://tempuri.org/ILogic/InsertingProcesszorDBResponse")]
        void InsertingProcesszorDB(int gyarto_id, int foglalat_id, string meg, int ar, int db, int magok, int frekvencia, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingProcesszorDB", ReplyAction="http://tempuri.org/ILogic/InsertingProcesszorDBResponse")]
        System.Threading.Tasks.Task InsertingProcesszorDBAsync(int gyarto_id, int foglalat_id, string meg, int ar, int db, int magok, int frekvencia, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingMonitorDB", ReplyAction="http://tempuri.org/ILogic/InsertingMonitorDBResponse")]
        void InsertingMonitorDB(int gyarto_id, int csatolo_id, int felbontas_id, int meret_id, string megnev, int ar, int db, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingMonitorDB", ReplyAction="http://tempuri.org/ILogic/InsertingMonitorDBResponse")]
        System.Threading.Tasks.Task InsertingMonitorDBAsync(int gyarto_id, int csatolo_id, int felbontas_id, int meret_id, string megnev, int ar, int db, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingMemoriaDB", ReplyAction="http://tempuri.org/ILogic/InsertingMemoriaDBResponse")]
        void InsertingMemoriaDB(int gyarto_id, int foglalat_id, string megnevezes, int ar, int db, int meret, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingMemoriaDB", ReplyAction="http://tempuri.org/ILogic/InsertingMemoriaDBResponse")]
        System.Threading.Tasks.Task InsertingMemoriaDBAsync(int gyarto_id, int foglalat_id, string megnevezes, int ar, int db, int meret, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingEgerDB", ReplyAction="http://tempuri.org/ILogic/InsertingEgerDBResponse")]
        void InsertingEgerDB(int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingEgerDB", ReplyAction="http://tempuri.org/ILogic/InsertingEgerDBResponse")]
        System.Threading.Tasks.Task InsertingEgerDBAsync(int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingHattertarDB", ReplyAction="http://tempuri.org/ILogic/InsertingHattertarDBResponse")]
        void InsertingHattertarDB(int gyarto_id, int csatolo_id, int tipus_id, string megnevezes, int ar, int db, int meret, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingHattertarDB", ReplyAction="http://tempuri.org/ILogic/InsertingHattertarDBResponse")]
        System.Threading.Tasks.Task InsertingHattertarDBAsync(int gyarto_id, int csatolo_id, int tipus_id, string megnevezes, int ar, int db, int meret, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingBillentyuzetDB", ReplyAction="http://tempuri.org/ILogic/InsertingBillentyuzetDBResponse")]
        void InsertingBillentyuzetDB(int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingBillentyuzetDB", ReplyAction="http://tempuri.org/ILogic/InsertingBillentyuzetDBResponse")]
        System.Threading.Tasks.Task InsertingBillentyuzetDBAsync(int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db, byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingAlaplapDB", ReplyAction="http://tempuri.org/ILogic/InsertingAlaplapDBResponse")]
        void InsertingAlaplapDB(
                    int usb_id, 
                    int hattertar_id, 
                    int gyarto_id, 
                    int foglalat_id, 
                    int memoria_id, 
                    int vga_id, 
                    int pci_id, 
                    int mem_db, 
                    int vga_db, 
                    bool ps2, 
                    string megnevezes, 
                    int ar, 
                    int db, 
                    byte[] kep, 
                    int hatdb, 
                    int usbdb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertingAlaplapDB", ReplyAction="http://tempuri.org/ILogic/InsertingAlaplapDBResponse")]
        System.Threading.Tasks.Task InsertingAlaplapDBAsync(
                    int usb_id, 
                    int hattertar_id, 
                    int gyarto_id, 
                    int foglalat_id, 
                    int memoria_id, 
                    int vga_id, 
                    int pci_id, 
                    int mem_db, 
                    int vga_db, 
                    bool ps2, 
                    string megnevezes, 
                    int ar, 
                    int db, 
                    byte[] kep, 
                    int hatdb, 
                    int usbdb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertKep", ReplyAction="http://tempuri.org/ILogic/InsertKepResponse")]
        void InsertKep(byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertKep", ReplyAction="http://tempuri.org/ILogic/InsertKepResponse")]
        System.Threading.Tasks.Task InsertKepAsync(byte[] kep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertVideokartya", ReplyAction="http://tempuri.org/ILogic/InsertVideokartyaResponse")]
        void InsertVideokartya(int csatolo_id, int csatdb, int id, int gyarto_id, int memoria_id, string megnev, int ar, int db, int meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertVideokartya", ReplyAction="http://tempuri.org/ILogic/InsertVideokartyaResponse")]
        System.Threading.Tasks.Task InsertVideokartyaAsync(int csatolo_id, int csatdb, int id, int gyarto_id, int memoria_id, string megnev, int ar, int db, int meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertTapegyseg", ReplyAction="http://tempuri.org/ILogic/InsertTapegysegResponse")]
        void InsertTapegyseg(int id, int gyarto_id, string megnev, int ar, int db, int telj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertTapegyseg", ReplyAction="http://tempuri.org/ILogic/InsertTapegysegResponse")]
        System.Threading.Tasks.Task InsertTapegysegAsync(int id, int gyarto_id, string megnev, int ar, int db, int telj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertSzamitogephaz", ReplyAction="http://tempuri.org/ILogic/InsertSzamitogephazResponse")]
        void InsertSzamitogephaz(int id, int gyarto_id, string megnev, int ar, int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertSzamitogephaz", ReplyAction="http://tempuri.org/ILogic/InsertSzamitogephazResponse")]
        System.Threading.Tasks.Task InsertSzamitogephazAsync(int id, int gyarto_id, string megnev, int ar, int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertMonitor", ReplyAction="http://tempuri.org/ILogic/InsertMonitorResponse")]
        void InsertMonitor(int id, int gyarto_id, int csatolo_id, int felbontas_id, int meret_id, string megnev, int ar, int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertMonitor", ReplyAction="http://tempuri.org/ILogic/InsertMonitorResponse")]
        System.Threading.Tasks.Task InsertMonitorAsync(int id, int gyarto_id, int csatolo_id, int felbontas_id, int meret_id, string megnev, int ar, int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertMemoria", ReplyAction="http://tempuri.org/ILogic/InsertMemoriaResponse")]
        void InsertMemoria(int id, int gyarto_id, int foglalat_id, string megnevezes, int ar, int db, int meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertMemoria", ReplyAction="http://tempuri.org/ILogic/InsertMemoriaResponse")]
        System.Threading.Tasks.Task InsertMemoriaAsync(int id, int gyarto_id, int foglalat_id, string megnevezes, int ar, int db, int meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertHattertar", ReplyAction="http://tempuri.org/ILogic/InsertHattertarResponse")]
        void InsertHattertar(int id, int gyarto_id, int csatolo_id, int tipus_id, string megnevezes, int ar, int db, int meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertHattertar", ReplyAction="http://tempuri.org/ILogic/InsertHattertarResponse")]
        System.Threading.Tasks.Task InsertHattertarAsync(int id, int gyarto_id, int csatolo_id, int tipus_id, string megnevezes, int ar, int db, int meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertEger", ReplyAction="http://tempuri.org/ILogic/InsertEgerResponse")]
        void InsertEger(int id, int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertEger", ReplyAction="http://tempuri.org/ILogic/InsertEgerResponse")]
        System.Threading.Tasks.Task InsertEgerAsync(int id, int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertCPU", ReplyAction="http://tempuri.org/ILogic/InsertCPUResponse")]
        void InsertCPU(int id, int gyarto_id, int foglalat_id, string meg, int ar, int db, int magok, int frekvencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertCPU", ReplyAction="http://tempuri.org/ILogic/InsertCPUResponse")]
        System.Threading.Tasks.Task InsertCPUAsync(int id, int gyarto_id, int foglalat_id, string meg, int ar, int db, int magok, int frekvencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertBillentyuzet", ReplyAction="http://tempuri.org/ILogic/InsertBillentyuzetResponse")]
        void InsertBillentyuzet(int id, int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertBillentyuzet", ReplyAction="http://tempuri.org/ILogic/InsertBillentyuzetResponse")]
        System.Threading.Tasks.Task InsertBillentyuzetAsync(int id, int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorCsatoloTipusGet", ReplyAction="http://tempuri.org/ILogic/MonitorCsatoloTipusGetResponse")]
        ComputerStore.DTO.Types.MonitorCsatoloTipus[] MonitorCsatoloTipusGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorCsatoloTipusGet", ReplyAction="http://tempuri.org/ILogic/MonitorCsatoloTipusGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorCsatoloTipus[]> MonitorCsatoloTipusGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasGet", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasGetResponse")]
        ComputerStore.DTO.Types.MonitorFelbontas[] MonitorFelbontasGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasGet", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorFelbontas[]> MonitorFelbontasGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretGet", ReplyAction="http://tempuri.org/ILogic/MonitorMeretGetResponse")]
        ComputerStore.DTO.Types.MonitorMeret[] MonitorMeretGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretGet", ReplyAction="http://tempuri.org/ILogic/MonitorMeretGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorMeret[]> MonitorMeretGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertarCsatoloTipusGet", ReplyAction="http://tempuri.org/ILogic/HattertarCsatoloTipusGetResponse")]
        ComputerStore.DTO.Types.HattertarCsatoloTipus[] HattertarCsatoloTipusGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertarCsatoloTipusGet", ReplyAction="http://tempuri.org/ILogic/HattertarCsatoloTipusGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarCsatoloTipus[]> HattertarCsatoloTipusGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertarTipusGet", ReplyAction="http://tempuri.org/ILogic/HattertarTipusGetResponse")]
        ComputerStore.DTO.Types.HattertarTipus[] HattertarTipusGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertarTipusGet", ReplyAction="http://tempuri.org/ILogic/HattertarTipusGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarTipus[]> HattertarTipusGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbGet", ReplyAction="http://tempuri.org/ILogic/UsbGetResponse")]
        ComputerStore.DTO.Types.UsbTipus[] UsbGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbGet", ReplyAction="http://tempuri.org/ILogic/UsbGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.UsbTipus[]> UsbGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertAlaplap", ReplyAction="http://tempuri.org/ILogic/InsertAlaplapResponse")]
        void InsertAlaplap(
                    int csatolo_id, 
                    int usb_id, 
                    int usbdb, 
                    int hatdb, 
                    int id, 
                    int gyarto_id, 
                    int foglalat_id, 
                    int memoria_id, 
                    int vga_id, 
                    int pci_id, 
                    int mem_db, 
                    int vga_db, 
                    bool ps2, 
                    string megnevezes, 
                    int ar, 
                    int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/InsertAlaplap", ReplyAction="http://tempuri.org/ILogic/InsertAlaplapResponse")]
        System.Threading.Tasks.Task InsertAlaplapAsync(
                    int csatolo_id, 
                    int usb_id, 
                    int usbdb, 
                    int hatdb, 
                    int id, 
                    int gyarto_id, 
                    int foglalat_id, 
                    int memoria_id, 
                    int vga_id, 
                    int pci_id, 
                    int mem_db, 
                    int vga_db, 
                    bool ps2, 
                    string megnevezes, 
                    int ar, 
                    int db);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/PciGet", ReplyAction="http://tempuri.org/ILogic/PciGetResponse")]
        ComputerStore.DTO.Types.PciExpressTipus[] PciGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/PciGet", ReplyAction="http://tempuri.org/ILogic/PciGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PciExpressTipus[]> PciGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/VgaGet", ReplyAction="http://tempuri.org/ILogic/VgaGetResponse")]
        ComputerStore.DTO.Types.VgaCsatoloFeluletTipus[] VgaGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/VgaGet", ReplyAction="http://tempuri.org/ILogic/VgaGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.VgaCsatoloFeluletTipus[]> VgaGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaGet", ReplyAction="http://tempuri.org/ILogic/MemoriaGetResponse")]
        ComputerStore.DTO.Types.MemoriaTipus[] MemoriaGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaGet", ReplyAction="http://tempuri.org/ILogic/MemoriaGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MemoriaTipus[]> MemoriaGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcesszorGet", ReplyAction="http://tempuri.org/ILogic/ProcesszorGetResponse")]
        ComputerStore.DTO.Types.ProcesszorFoglalatTipus[] ProcesszorGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcesszorGet", ReplyAction="http://tempuri.org/ILogic/ProcesszorGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus[]> ProcesszorGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GyartoGet", ReplyAction="http://tempuri.org/ILogic/GyartoGetResponse")]
        ComputerStore.DTO.Types.AlkatreszGyarto[] GyartoGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GyartoGet", ReplyAction="http://tempuri.org/ILogic/GyartoGetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.AlkatreszGyarto[]> GyartoGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetAlaplap", ReplyAction="http://tempuri.org/ILogic/GetAlaplapResponse")]
        ComputerStore.DTO.Types.Fokategoriatipus[] GetAlaplap();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetAlaplap", ReplyAction="http://tempuri.org/ILogic/GetAlaplapResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetAlaplapAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetBillentyuzet", ReplyAction="http://tempuri.org/ILogic/GetBillentyuzetResponse")]
        ComputerStore.DTO.Types.Fokategoriatipus[] GetBillentyuzet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetBillentyuzet", ReplyAction="http://tempuri.org/ILogic/GetBillentyuzetResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetBillentyuzetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetEger", ReplyAction="http://tempuri.org/ILogic/GetEgerResponse")]
        ComputerStore.DTO.Types.Fokategoriatipus[] GetEger();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetEger", ReplyAction="http://tempuri.org/ILogic/GetEgerResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetEgerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetHattertar", ReplyAction="http://tempuri.org/ILogic/GetHattertarResponse")]
        ComputerStore.DTO.Types.Fokategoriatipus[] GetHattertar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetHattertar", ReplyAction="http://tempuri.org/ILogic/GetHattertarResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetHattertarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetMemoria", ReplyAction="http://tempuri.org/ILogic/GetMemoriaResponse")]
        ComputerStore.DTO.Types.Fokategoriatipus[] GetMemoria();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetMemoria", ReplyAction="http://tempuri.org/ILogic/GetMemoriaResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetMemoriaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetMonitor", ReplyAction="http://tempuri.org/ILogic/GetMonitorResponse")]
        ComputerStore.DTO.Types.Fokategoriatipus[] GetMonitor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetMonitor", ReplyAction="http://tempuri.org/ILogic/GetMonitorResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetMonitorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetProcesszor", ReplyAction="http://tempuri.org/ILogic/GetProcesszorResponse")]
        ComputerStore.DTO.Types.Fokategoriatipus[] GetProcesszor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetProcesszor", ReplyAction="http://tempuri.org/ILogic/GetProcesszorResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetProcesszorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetSzamitogephaz", ReplyAction="http://tempuri.org/ILogic/GetSzamitogephazResponse")]
        ComputerStore.DTO.Types.Fokategoriatipus[] GetSzamitogephaz();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetSzamitogephaz", ReplyAction="http://tempuri.org/ILogic/GetSzamitogephazResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetSzamitogephazAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetTapegyseg", ReplyAction="http://tempuri.org/ILogic/GetTapegysegResponse")]
        ComputerStore.DTO.Types.Fokategoriatipus[] GetTapegyseg();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetTapegyseg", ReplyAction="http://tempuri.org/ILogic/GetTapegysegResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetTapegysegAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetVideokartya", ReplyAction="http://tempuri.org/ILogic/GetVideokartyaResponse")]
        ComputerStore.DTO.Types.Fokategoriatipus[] GetVideokartya();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/GetVideokartya", ReplyAction="http://tempuri.org/ILogic/GetVideokartyaResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetVideokartyaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriak", ReplyAction="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriakResponse")]
        ComputerStore.DTO.Types.ProcesszorFoglalatTipus[] ProcFoglalat_GetKategoriak();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriak", ReplyAction="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriakResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus[]> ProcFoglalat_GetKategoriakAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriakByName", ReplyAction="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriakByNameResponse")]
        ComputerStore.DTO.Types.ProcesszorFoglalatTipus[] ProcFoglalat_GetKategoriakByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriakByName", ReplyAction="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriakByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus[]> ProcFoglalat_GetKategoriakByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriaByIDResponse")]
        ComputerStore.DTO.Types.ProcesszorFoglalatTipus ProcFoglalat_GetKategoriaByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/ProcFoglalat_GetKategoriaByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus> ProcFoglalat_GetKategoriaByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcFoglalat_Update", ReplyAction="http://tempuri.org/ILogic/ProcFoglalat_UpdateResponse")]
        void ProcFoglalat_Update(ComputerStore.DTO.Types.ProcesszorFoglalatTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcFoglalat_Update", ReplyAction="http://tempuri.org/ILogic/ProcFoglalat_UpdateResponse")]
        System.Threading.Tasks.Task ProcFoglalat_UpdateAsync(ComputerStore.DTO.Types.ProcesszorFoglalatTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcFoglalat_Add", ReplyAction="http://tempuri.org/ILogic/ProcFoglalat_AddResponse")]
        void ProcFoglalat_Add(ComputerStore.DTO.Types.ProcesszorFoglalatTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/ProcFoglalat_Add", ReplyAction="http://tempuri.org/ILogic/ProcFoglalat_AddResponse")]
        System.Threading.Tasks.Task ProcFoglalat_AddAsync(ComputerStore.DTO.Types.ProcesszorFoglalatTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaFoglalat_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/MemoriaFoglalat_GetKaegoriakResponse")]
        ComputerStore.DTO.Types.MemoriaTipus[] MemoriaFoglalat_GetKaegoriak();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaFoglalat_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/MemoriaFoglalat_GetKaegoriakResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MemoriaTipus[]> MemoriaFoglalat_GetKaegoriakAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaFoglalat_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/MemoriaFoglalat_GetKaegoriakByNameResponse")]
        ComputerStore.DTO.Types.MemoriaTipus[] MemoriaFoglalat_GetKaegoriakByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaFoglalat_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/MemoriaFoglalat_GetKaegoriakByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MemoriaTipus[]> MemoriaFoglalat_GetKaegoriakByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaFoglalat_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/MemoriaFoglalat_GetKategoriaByIDResponse")]
        ComputerStore.DTO.Types.MemoriaTipus MemoriaFoglalat_GetKategoriaByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaFoglalat_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/MemoriaFoglalat_GetKategoriaByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MemoriaTipus> MemoriaFoglalat_GetKategoriaByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaFoglalat_Update", ReplyAction="http://tempuri.org/ILogic/MemoriaFoglalat_UpdateResponse")]
        void MemoriaFoglalat_Update(ComputerStore.DTO.Types.MemoriaTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaFoglalat_Update", ReplyAction="http://tempuri.org/ILogic/MemoriaFoglalat_UpdateResponse")]
        System.Threading.Tasks.Task MemoriaFoglalat_UpdateAsync(ComputerStore.DTO.Types.MemoriaTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaFoglalat_Add", ReplyAction="http://tempuri.org/ILogic/MemoriaFoglalat_AddResponse")]
        void MemoriaFoglalat_Add(ComputerStore.DTO.Types.MemoriaTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MemoriaFoglalat_Add", ReplyAction="http://tempuri.org/ILogic/MemoriaFoglalat_AddResponse")]
        System.Threading.Tasks.Task MemoriaFoglalat_AddAsync(ComputerStore.DTO.Types.MemoriaTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbTipus_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/UsbTipus_GetKaegoriakResponse")]
        ComputerStore.DTO.Types.UsbTipus[] UsbTipus_GetKaegoriak();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbTipus_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/UsbTipus_GetKaegoriakResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.UsbTipus[]> UsbTipus_GetKaegoriakAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbTipus_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/UsbTipus_GetKaegoriakByNameResponse")]
        ComputerStore.DTO.Types.UsbTipus[] UsbTipus_GetKaegoriakByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbTipus_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/UsbTipus_GetKaegoriakByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.UsbTipus[]> UsbTipus_GetKaegoriakByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbTipus_Update", ReplyAction="http://tempuri.org/ILogic/UsbTipus_UpdateResponse")]
        void UsbTipus_Update(ComputerStore.DTO.Types.UsbTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbTipus_Update", ReplyAction="http://tempuri.org/ILogic/UsbTipus_UpdateResponse")]
        System.Threading.Tasks.Task UsbTipus_UpdateAsync(ComputerStore.DTO.Types.UsbTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbTipus_Add", ReplyAction="http://tempuri.org/ILogic/UsbTipus_AddResponse")]
        void UsbTipus_Add(ComputerStore.DTO.Types.UsbTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbTipus_Add", ReplyAction="http://tempuri.org/ILogic/UsbTipus_AddResponse")]
        System.Threading.Tasks.Task UsbTipus_AddAsync(ComputerStore.DTO.Types.UsbTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbTipus_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/UsbTipus_GetKategoriaByIDResponse")]
        ComputerStore.DTO.Types.UsbTipus UsbTipus_GetKategoriaByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/UsbTipus_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/UsbTipus_GetKategoriaByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.UsbTipus> UsbTipus_GetKategoriaByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatTipus_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/HattertatTipus_GetKaegoriakResponse")]
        ComputerStore.DTO.Types.HattertarTipus[] HattertatTipus_GetKaegoriak();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatTipus_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/HattertatTipus_GetKaegoriakResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarTipus[]> HattertatTipus_GetKaegoriakAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatTipus_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/HattertatTipus_GetKaegoriakByNameResponse")]
        ComputerStore.DTO.Types.HattertarTipus[] HattertatTipus_GetKaegoriakByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatTipus_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/HattertatTipus_GetKaegoriakByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarTipus[]> HattertatTipus_GetKaegoriakByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatTipus_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/HattertatTipus_GetKategoriaByIDResponse")]
        ComputerStore.DTO.Types.HattertarTipus HattertatTipus_GetKategoriaByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatTipus_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/HattertatTipus_GetKategoriaByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarTipus> HattertatTipus_GetKategoriaByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatTipus_Update", ReplyAction="http://tempuri.org/ILogic/HattertatTipus_UpdateResponse")]
        void HattertatTipus_Update(ComputerStore.DTO.Types.HattertarTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatTipus_Update", ReplyAction="http://tempuri.org/ILogic/HattertatTipus_UpdateResponse")]
        System.Threading.Tasks.Task HattertatTipus_UpdateAsync(ComputerStore.DTO.Types.HattertarTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatTipus_Add", ReplyAction="http://tempuri.org/ILogic/HattertatTipus_AddResponse")]
        void HattertatTipus_Add(ComputerStore.DTO.Types.HattertarTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatTipus_Add", ReplyAction="http://tempuri.org/ILogic/HattertatTipus_AddResponse")]
        System.Threading.Tasks.Task HattertatTipus_AddAsync(ComputerStore.DTO.Types.HattertarTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKaegoriakResponse")]
        ComputerStore.DTO.Types.HattertarCsatoloTipus[] HattertatCsatoloTipus_GetKaegoriak();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKaegoriakResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarCsatoloTipus[]> HattertatCsatoloTipus_GetKaegoriakAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKaegoriakByNameResponse")]
        ComputerStore.DTO.Types.HattertarCsatoloTipus[] HattertatCsatoloTipus_GetKaegoriakByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKaegoriakByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarCsatoloTipus[]> HattertatCsatoloTipus_GetKaegoriakByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKategoriaByIDResponse")]
        ComputerStore.DTO.Types.HattertarCsatoloTipus HattertatCsatoloTipus_GetKategoriaByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/HattertatCsatoloTipus_GetKategoriaByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarCsatoloTipus> HattertatCsatoloTipus_GetKategoriaByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatCsatoloTipus_Update", ReplyAction="http://tempuri.org/ILogic/HattertatCsatoloTipus_UpdateResponse")]
        void HattertatCsatoloTipus_Update(ComputerStore.DTO.Types.HattertarCsatoloTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatCsatoloTipus_Update", ReplyAction="http://tempuri.org/ILogic/HattertatCsatoloTipus_UpdateResponse")]
        System.Threading.Tasks.Task HattertatCsatoloTipus_UpdateAsync(ComputerStore.DTO.Types.HattertarCsatoloTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatCsatoloTipus_Add", ReplyAction="http://tempuri.org/ILogic/HattertatCsatoloTipus_AddResponse")]
        void HattertatCsatoloTipus_Add(ComputerStore.DTO.Types.HattertarCsatoloTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/HattertatCsatoloTipus_Add", ReplyAction="http://tempuri.org/ILogic/HattertatCsatoloTipus_AddResponse")]
        System.Threading.Tasks.Task HattertatCsatoloTipus_AddAsync(ComputerStore.DTO.Types.HattertarCsatoloTipus type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKaegoriakResponse")]
        ComputerStore.DTO.Types.MonitorFelbontas[] MonitorFelbontasTipus_GetKaegoriak();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKaegoriakResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorFelbontas[]> MonitorFelbontasTipus_GetKaegoriakAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKaegoriakByNameResponse")]
        ComputerStore.DTO.Types.MonitorFelbontas[] MonitorFelbontasTipus_GetKaegoriakByName(string felbontas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKaegoriakByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorFelbontas[]> MonitorFelbontasTipus_GetKaegoriakByNameAsync(string felbontas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKategoriaByIDResponse")]
        ComputerStore.DTO.Types.MonitorFelbontas MonitorFelbontasTipus_GetKategoriaByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasTipus_GetKategoriaByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorFelbontas> MonitorFelbontasTipus_GetKategoriaByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasTipus_Update", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasTipus_UpdateResponse")]
        void MonitorFelbontasTipus_Update(ComputerStore.DTO.Types.MonitorFelbontas type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasTipus_Update", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasTipus_UpdateResponse")]
        System.Threading.Tasks.Task MonitorFelbontasTipus_UpdateAsync(ComputerStore.DTO.Types.MonitorFelbontas type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasTipus_Add", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasTipus_AddResponse")]
        void MonitorFelbontasTipus_Add(ComputerStore.DTO.Types.MonitorFelbontas type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorFelbontasTipus_Add", ReplyAction="http://tempuri.org/ILogic/MonitorFelbontasTipus_AddResponse")]
        System.Threading.Tasks.Task MonitorFelbontasTipus_AddAsync(ComputerStore.DTO.Types.MonitorFelbontas type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretTipus_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/MonitorMeretTipus_GetKaegoriakResponse")]
        ComputerStore.DTO.Types.MonitorMeret[] MonitorMeretTipus_GetKaegoriak();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretTipus_GetKaegoriak", ReplyAction="http://tempuri.org/ILogic/MonitorMeretTipus_GetKaegoriakResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorMeret[]> MonitorMeretTipus_GetKaegoriakAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretTipus_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/MonitorMeretTipus_GetKaegoriakByNameResponse")]
        ComputerStore.DTO.Types.MonitorMeret[] MonitorMeretTipus_GetKaegoriakByName(string meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretTipus_GetKaegoriakByName", ReplyAction="http://tempuri.org/ILogic/MonitorMeretTipus_GetKaegoriakByNameResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorMeret[]> MonitorMeretTipus_GetKaegoriakByNameAsync(string meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretTipus_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/MonitorMeretTipus_GetKategoriaByIDResponse")]
        ComputerStore.DTO.Types.MonitorMeret MonitorMeretTipus_GetKategoriaByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretTipus_GetKategoriaByID", ReplyAction="http://tempuri.org/ILogic/MonitorMeretTipus_GetKategoriaByIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorMeret> MonitorMeretTipus_GetKategoriaByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretTipus_Update", ReplyAction="http://tempuri.org/ILogic/MonitorMeretTipus_UpdateResponse")]
        void MonitorMeretTipus_Update(ComputerStore.DTO.Types.MonitorMeret meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretTipus_Update", ReplyAction="http://tempuri.org/ILogic/MonitorMeretTipus_UpdateResponse")]
        System.Threading.Tasks.Task MonitorMeretTipus_UpdateAsync(ComputerStore.DTO.Types.MonitorMeret meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretTipus_Add", ReplyAction="http://tempuri.org/ILogic/MonitorMeretTipus_AddResponse")]
        void MonitorMeretTipus_Add(ComputerStore.DTO.Types.MonitorMeret meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/MonitorMeretTipus_Add", ReplyAction="http://tempuri.org/ILogic/MonitorMeretTipus_AddResponse")]
        System.Threading.Tasks.Task MonitorMeretTipus_AddAsync(ComputerStore.DTO.Types.MonitorMeret meret);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Alaplap_GetByFoglalatID", ReplyAction="http://tempuri.org/ILogic/Alaplap_GetByFoglalatIDResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Alaplap> Alaplap_GetByFoglalatID(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Alaplap_GetByFoglalatID", ReplyAction="http://tempuri.org/ILogic/Alaplap_GetByFoglalatIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Alaplap>> Alaplap_GetByFoglalatIDAsync(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Alaplap_GetListByFoglalatID", ReplyAction="http://tempuri.org/ILogic/Alaplap_GetListByFoglalatIDResponse")]
        ComputerStore.DTO.Types.Alaplap[] Alaplap_GetListByFoglalatID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Alaplap_GetListByFoglalatID", ReplyAction="http://tempuri.org/ILogic/Alaplap_GetListByFoglalatIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.Alaplap[]> Alaplap_GetListByFoglalatIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Alaplap_GetByMemoriaID", ReplyAction="http://tempuri.org/ILogic/Alaplap_GetByMemoriaIDResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Alaplap> Alaplap_GetByMemoriaID(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Alaplap_GetByMemoriaID", ReplyAction="http://tempuri.org/ILogic/Alaplap_GetByMemoriaIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Alaplap>> Alaplap_GetByMemoriaIDAsync(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Billentyuzet_GetByUsbID", ReplyAction="http://tempuri.org/ILogic/Billentyuzet_GetByUsbIDResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Billentyuzet> Billentyuzet_GetByUsbID(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Billentyuzet_GetByUsbID", ReplyAction="http://tempuri.org/ILogic/Billentyuzet_GetByUsbIDResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Billentyuzet>> Billentyuzet_GetByUsbIDAsync(int id, int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Billentyuzet_GetByPs", ReplyAction="http://tempuri.org/ILogic/Billentyuzet_GetByPsResponse")]
        ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Billentyuzet> Billentyuzet_GetByPs(int pageNumber, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogic/Billentyuzet_GetByPs", ReplyAction="http://tempuri.org/ILogic/Billentyuzet_GetByPsResponse")]
        System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Billentyuzet>> Billentyuzet_GetByPsAsync(int pageNumber, int pageSize);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogicChannel : ComputerStore.Client.BusinessLogic.ILogic, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogicClient : System.ServiceModel.ClientBase<ComputerStore.Client.BusinessLogic.ILogic>, ComputerStore.Client.BusinessLogic.ILogic {
        
        public LogicClient() {
        }
        
        public LogicClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogicClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogicClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogicClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Eger> Eger_GetByUsbID(int id, int pageNumber, int pageSize) {
            return base.Channel.Eger_GetByUsbID(id, pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Eger>> Eger_GetByUsbIDAsync(int id, int pageNumber, int pageSize) {
            return base.Channel.Eger_GetByUsbIDAsync(id, pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Eger> Eger_GetByPs(int pageNumber, int pageSize) {
            return base.Channel.Eger_GetByPs(pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Eger>> Eger_GetByPsAsync(int pageNumber, int pageSize) {
            return base.Channel.Eger_GetByPsAsync(pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Hattertar> Hattertar_GetByHattertarTipus(int id, int pageNumber, int pageSize) {
            return base.Channel.Hattertar_GetByHattertarTipus(id, pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Hattertar>> Hattertar_GetByHattertarTipusAsync(int id, int pageNumber, int pageSize) {
            return base.Channel.Hattertar_GetByHattertarTipusAsync(id, pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Hattertar> Hattertar_GetByHattertarCsatolo(int id, int pageNumber, int pageSize) {
            return base.Channel.Hattertar_GetByHattertarCsatolo(id, pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Hattertar>> Hattertar_GetByHattertarCsatoloAsync(int id, int pageNumber, int pageSize) {
            return base.Channel.Hattertar_GetByHattertarCsatoloAsync(id, pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Memoria> Memoria_GetByFoglalat(int id, int pageNumber, int pageSize) {
            return base.Channel.Memoria_GetByFoglalat(id, pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Memoria>> Memoria_GetByFoglalatAsync(int id, int pageNumber, int pageSize) {
            return base.Channel.Memoria_GetByFoglalatAsync(id, pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.Memoria[] Memoria_GetListByFoglalat(int id) {
            return base.Channel.Memoria_GetListByFoglalat(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Memoria[]> Memoria_GetListByFoglalatAsync(int id) {
            return base.Channel.Memoria_GetListByFoglalatAsync(id);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Monitor> Monitor_GetByMeret(int id, int pageNumber, int pageSize) {
            return base.Channel.Monitor_GetByMeret(id, pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Monitor>> Monitor_GetByMeretAsync(int id, int pageNumber, int pageSize) {
            return base.Channel.Monitor_GetByMeretAsync(id, pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Monitor> Monitor_GetByFelbontas(int id, int pageNumber, int pageSize) {
            return base.Channel.Monitor_GetByFelbontas(id, pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Monitor>> Monitor_GetByFelbontasAsync(int id, int pageNumber, int pageSize) {
            return base.Channel.Monitor_GetByFelbontasAsync(id, pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Processzor> Processzor_GetByFoglalat(int id, int pageNumber, int pageSize) {
            return base.Channel.Processzor_GetByFoglalat(id, pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Processzor>> Processzor_GetByFoglalatAsync(int id, int pageNumber, int pageSize) {
            return base.Channel.Processzor_GetByFoglalatAsync(id, pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.Processzor[] Processzor_GetListByFoglalat(int id) {
            return base.Channel.Processzor_GetListByFoglalat(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Processzor[]> Processzor_GetListByFoglalatAsync(int id) {
            return base.Channel.Processzor_GetListByFoglalatAsync(id);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Szamitogephaz> Szamitogephaz_Get(int pageNumber, int pageSize) {
            return base.Channel.Szamitogephaz_Get(pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Szamitogephaz>> Szamitogephaz_GetAsync(int pageNumber, int pageSize) {
            return base.Channel.Szamitogephaz_GetAsync(pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Tapegyseg> Tapegyseg_Get(int pageNumber, int pageSize) {
            return base.Channel.Tapegyseg_Get(pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Tapegyseg>> Tapegyseg_GetAsync(int pageNumber, int pageSize) {
            return base.Channel.Tapegyseg_GetAsync(pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Videokartya> Videokartya_Get(int pageNumber, int pageSize) {
            return base.Channel.Videokartya_Get(pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Videokartya>> Videokartya_GetAsync(int pageNumber, int pageSize) {
            return base.Channel.Videokartya_GetAsync(pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PciExpressTipus[] PCIExpress_GetByName(string name) {
            return base.Channel.PCIExpress_GetByName(name);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PciExpressTipus[]> PCIExpress_GetByNameAsync(string name) {
            return base.Channel.PCIExpress_GetByNameAsync(name);
        }
        
        public ComputerStore.DTO.Types.PciExpressTipus PCIExpress_GetByID(int id) {
            return base.Channel.PCIExpress_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PciExpressTipus> PCIExpress_GetByIDAsync(int id) {
            return base.Channel.PCIExpress_GetByIDAsync(id);
        }
        
        public void PCIExpress_Update(ComputerStore.DTO.Types.PciExpressTipus type) {
            base.Channel.PCIExpress_Update(type);
        }
        
        public System.Threading.Tasks.Task PCIExpress_UpdateAsync(ComputerStore.DTO.Types.PciExpressTipus type) {
            return base.Channel.PCIExpress_UpdateAsync(type);
        }
        
        public void PCIExpress_Add(ComputerStore.DTO.Types.PciExpressTipus type) {
            base.Channel.PCIExpress_Add(type);
        }
        
        public System.Threading.Tasks.Task PCIExpress_AddAsync(ComputerStore.DTO.Types.PciExpressTipus type) {
            return base.Channel.PCIExpress_AddAsync(type);
        }
        
        public ComputerStore.DTO.Types.ProcesszorFoglalatTipus[] ProcesszorFoglalat_GetByName(string name) {
            return base.Channel.ProcesszorFoglalat_GetByName(name);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus[]> ProcesszorFoglalat_GetByNameAsync(string name) {
            return base.Channel.ProcesszorFoglalat_GetByNameAsync(name);
        }
        
        public ComputerStore.DTO.Types.ProcesszorFoglalatTipus ProcesszorFoglalat_GetByID(int id) {
            return base.Channel.ProcesszorFoglalat_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus> ProcesszorFoglalat_GetByIDAsync(int id) {
            return base.Channel.ProcesszorFoglalat_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.VgaCsatoloFeluletTipus[] VgaCsatolo_GetByName(string name) {
            return base.Channel.VgaCsatolo_GetByName(name);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.VgaCsatoloFeluletTipus[]> VgaCsatolo_GetByNameAsync(string name) {
            return base.Channel.VgaCsatolo_GetByNameAsync(name);
        }
        
        public ComputerStore.DTO.Types.VgaCsatoloFeluletTipus VgaCsatolo_GetByID(int id) {
            return base.Channel.VgaCsatolo_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.VgaCsatoloFeluletTipus> VgaCsatolo_GetByIDAsync(int id) {
            return base.Channel.VgaCsatolo_GetByIDAsync(id);
        }
        
        public void VgaCsatolo_Update(ComputerStore.DTO.Types.VgaCsatoloFeluletTipus type) {
            base.Channel.VgaCsatolo_Update(type);
        }
        
        public System.Threading.Tasks.Task VgaCsatolo_UpdateAsync(ComputerStore.DTO.Types.VgaCsatoloFeluletTipus type) {
            return base.Channel.VgaCsatolo_UpdateAsync(type);
        }
        
        public void VgaCsatolo_Add(ComputerStore.DTO.Types.VgaCsatoloFeluletTipus type) {
            base.Channel.VgaCsatolo_Add(type);
        }
        
        public System.Threading.Tasks.Task VgaCsatolo_AddAsync(ComputerStore.DTO.Types.VgaCsatoloFeluletTipus type) {
            return base.Channel.VgaCsatolo_AddAsync(type);
        }
        
        public ComputerStore.DTO.Types.AlkatreszGyarto[] Gyarto_GetByName(string name) {
            return base.Channel.Gyarto_GetByName(name);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.AlkatreszGyarto[]> Gyarto_GetByNameAsync(string name) {
            return base.Channel.Gyarto_GetByNameAsync(name);
        }
        
        public ComputerStore.DTO.Types.AlkatreszGyarto Gyarto_GetByID(int id) {
            return base.Channel.Gyarto_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.AlkatreszGyarto> Gyarto_GetByIDAsync(int id) {
            return base.Channel.Gyarto_GetByIDAsync(id);
        }
        
        public void Gyarto_Update(ComputerStore.DTO.Types.AlkatreszGyarto type) {
            base.Channel.Gyarto_Update(type);
        }
        
        public System.Threading.Tasks.Task Gyarto_UpdateAsync(ComputerStore.DTO.Types.AlkatreszGyarto type) {
            return base.Channel.Gyarto_UpdateAsync(type);
        }
        
        public void Gyarto_Add(ComputerStore.DTO.Types.AlkatreszGyarto type) {
            base.Channel.Gyarto_Add(type);
        }
        
        public System.Threading.Tasks.Task Gyarto_AddAsync(ComputerStore.DTO.Types.AlkatreszGyarto type) {
            return base.Channel.Gyarto_AddAsync(type);
        }
        
        public ComputerStore.DTO.Types.MonitorCsatoloTipus[] MonitorCsatolo_GetByName(string name) {
            return base.Channel.MonitorCsatolo_GetByName(name);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorCsatoloTipus[]> MonitorCsatolo_GetByNameAsync(string name) {
            return base.Channel.MonitorCsatolo_GetByNameAsync(name);
        }
        
        public ComputerStore.DTO.Types.MonitorCsatoloTipus MonitorCsatolo_GetByID(int id) {
            return base.Channel.MonitorCsatolo_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorCsatoloTipus> MonitorCsatolo_GetByIDAsync(int id) {
            return base.Channel.MonitorCsatolo_GetByIDAsync(id);
        }
        
        public void MonitorCsatolo_Update(ComputerStore.DTO.Types.MonitorCsatoloTipus type) {
            base.Channel.MonitorCsatolo_Update(type);
        }
        
        public System.Threading.Tasks.Task MonitorCsatolo_UpdateAsync(ComputerStore.DTO.Types.MonitorCsatoloTipus type) {
            return base.Channel.MonitorCsatolo_UpdateAsync(type);
        }
        
        public void MonitorCsatolo_Add(ComputerStore.DTO.Types.MonitorCsatoloTipus type) {
            base.Channel.MonitorCsatolo_Add(type);
        }
        
        public System.Threading.Tasks.Task MonitorCsatolo_AddAsync(ComputerStore.DTO.Types.MonitorCsatoloTipus type) {
            return base.Channel.MonitorCsatolo_AddAsync(type);
        }
        
        public ComputerStore.DTO.Types.Alaplap Alaplap_GetByID(int id) {
            return base.Channel.Alaplap_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Alaplap> Alaplap_GetByIDAsync(int id) {
            return base.Channel.Alaplap_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.Billentyuzet Billentyuzet_GetByID(int id) {
            return base.Channel.Billentyuzet_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Billentyuzet> Billentyuzet_GetByIDAsync(int id) {
            return base.Channel.Billentyuzet_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.Eger Eger_GetByID(int id) {
            return base.Channel.Eger_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Eger> Eger_GetByIDAsync(int id) {
            return base.Channel.Eger_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.Hattertar Hattertar_GetByID(int id) {
            return base.Channel.Hattertar_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Hattertar> Hattertar_GetByIDAsync(int id) {
            return base.Channel.Hattertar_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.Memoria Memoria_GetByID(int id) {
            return base.Channel.Memoria_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Memoria> Memoria_GetByIDAsync(int id) {
            return base.Channel.Memoria_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.Monitor Monitor_GetByID(int id) {
            return base.Channel.Monitor_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Monitor> Monitor_GetByIDAsync(int id) {
            return base.Channel.Monitor_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.Processzor Processzor_GetByID(int id) {
            return base.Channel.Processzor_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Processzor> Processzor_GetByIDAsync(int id) {
            return base.Channel.Processzor_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.Szamitogephaz Szamitogephaz_GetByID(int id) {
            return base.Channel.Szamitogephaz_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Szamitogephaz> Szamitogephaz_GetByIDAsync(int id) {
            return base.Channel.Szamitogephaz_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.Tapegyseg Tapegyseg_GetByID(int id) {
            return base.Channel.Tapegyseg_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Tapegyseg> Tapegyseg_GetByIDAsync(int id) {
            return base.Channel.Tapegyseg_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.Videokartya Videokartya_GetByID(int id) {
            return base.Channel.Videokartya_GetByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Videokartya> Videokartya_GetByIDAsync(int id) {
            return base.Channel.Videokartya_GetByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.Videokartya[] Videokartya_GetList() {
            return base.Channel.Videokartya_GetList();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Videokartya[]> Videokartya_GetListAsync() {
            return base.Channel.Videokartya_GetListAsync();
        }
        
        public void DeleteAlaplap(int id) {
            base.Channel.DeleteAlaplap(id);
        }
        
        public System.Threading.Tasks.Task DeleteAlaplapAsync(int id) {
            return base.Channel.DeleteAlaplapAsync(id);
        }
        
        public void DeleteBillentyuzet(int id) {
            base.Channel.DeleteBillentyuzet(id);
        }
        
        public System.Threading.Tasks.Task DeleteBillentyuzetAsync(int id) {
            return base.Channel.DeleteBillentyuzetAsync(id);
        }
        
        public void DeleteEger(int id) {
            base.Channel.DeleteEger(id);
        }
        
        public System.Threading.Tasks.Task DeleteEgerAsync(int id) {
            return base.Channel.DeleteEgerAsync(id);
        }
        
        public void DeleteHattertar(int id) {
            base.Channel.DeleteHattertar(id);
        }
        
        public System.Threading.Tasks.Task DeleteHattertarAsync(int id) {
            return base.Channel.DeleteHattertarAsync(id);
        }
        
        public void DeleteMemoria(int id) {
            base.Channel.DeleteMemoria(id);
        }
        
        public System.Threading.Tasks.Task DeleteMemoriaAsync(int id) {
            return base.Channel.DeleteMemoriaAsync(id);
        }
        
        public void DeleteMonitor(int id) {
            base.Channel.DeleteMonitor(id);
        }
        
        public System.Threading.Tasks.Task DeleteMonitorAsync(int id) {
            return base.Channel.DeleteMonitorAsync(id);
        }
        
        public void DeleteProcesszor(int id) {
            base.Channel.DeleteProcesszor(id);
        }
        
        public System.Threading.Tasks.Task DeleteProcesszorAsync(int id) {
            return base.Channel.DeleteProcesszorAsync(id);
        }
        
        public void DeleteSzamitogephaz(int id) {
            base.Channel.DeleteSzamitogephaz(id);
        }
        
        public System.Threading.Tasks.Task DeleteSzamitogephazAsync(int id) {
            return base.Channel.DeleteSzamitogephazAsync(id);
        }
        
        public void DeleteTapegyseg(int id) {
            base.Channel.DeleteTapegyseg(id);
        }
        
        public System.Threading.Tasks.Task DeleteTapegysegAsync(int id) {
            return base.Channel.DeleteTapegysegAsync(id);
        }
        
        public void DeleteVideokartya(int id) {
            base.Channel.DeleteVideokartya(id);
        }
        
        public System.Threading.Tasks.Task DeleteVideokartyaAsync(int id) {
            return base.Channel.DeleteVideokartyaAsync(id);
        }
        
        public ComputerStore.DTO.Types.Hattertar[] Hattertar_GetListByAlaplapAndTipus(int alaplapId, int tipus) {
            return base.Channel.Hattertar_GetListByAlaplapAndTipus(alaplapId, tipus);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Hattertar[]> Hattertar_GetListByAlaplapAndTipusAsync(int alaplapId, int tipus) {
            return base.Channel.Hattertar_GetListByAlaplapAndTipusAsync(alaplapId, tipus);
        }
        
        public ComputerStore.DTO.Types.UsbTipus[] Alaplap_GetUsbTipusok(int alaplapID) {
            return base.Channel.Alaplap_GetUsbTipusok(alaplapID);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.UsbTipus[]> Alaplap_GetUsbTipusokAsync(int alaplapID) {
            return base.Channel.Alaplap_GetUsbTipusokAsync(alaplapID);
        }
        
        public ComputerStore.DTO.Types.Billentyuzet[] Billentyuzet_GetListByUsb(int usbID) {
            return base.Channel.Billentyuzet_GetListByUsb(usbID);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Billentyuzet[]> Billentyuzet_GetListByUsbAsync(int usbID) {
            return base.Channel.Billentyuzet_GetListByUsbAsync(usbID);
        }
        
        public ComputerStore.DTO.Types.Billentyuzet[] Billentyuzet_GetListPS2() {
            return base.Channel.Billentyuzet_GetListPS2();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Billentyuzet[]> Billentyuzet_GetListPS2Async() {
            return base.Channel.Billentyuzet_GetListPS2Async();
        }
        
        public ComputerStore.DTO.Types.Eger[] Eger_GetListByUsb(int usbID) {
            return base.Channel.Eger_GetListByUsb(usbID);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Eger[]> Eger_GetListByUsbAsync(int usbID) {
            return base.Channel.Eger_GetListByUsbAsync(usbID);
        }
        
        public ComputerStore.DTO.Types.Eger[] Eger_GetListPS2() {
            return base.Channel.Eger_GetListPS2();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Eger[]> Eger_GetListPS2Async() {
            return base.Channel.Eger_GetListPS2Async();
        }
        
        public ComputerStore.DTO.Types.Szamitogephaz[] SzamitogepHaz_GetList() {
            return base.Channel.SzamitogepHaz_GetList();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Szamitogephaz[]> SzamitogepHaz_GetListAsync() {
            return base.Channel.SzamitogepHaz_GetListAsync();
        }
        
        public ComputerStore.DTO.Types.Tapegyseg[] Tapegyseg_GetList() {
            return base.Channel.Tapegyseg_GetList();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Tapegyseg[]> Tapegyseg_GetListAsync() {
            return base.Channel.Tapegyseg_GetListAsync();
        }
        
        public ComputerStore.DTO.Types.Monitor[] Monitor_GetListByMeret(int meretID) {
            return base.Channel.Monitor_GetListByMeret(meretID);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Monitor[]> Monitor_GetListByMeretAsync(int meretID) {
            return base.Channel.Monitor_GetListByMeretAsync(meretID);
        }
        
        public ComputerStore.DTO.Types.AlaplapUSB USBGetByAlaplapID(int id) {
            return base.Channel.USBGetByAlaplapID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.AlaplapUSB> USBGetByAlaplapIDAsync(int id) {
            return base.Channel.USBGetByAlaplapIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.AlaplapHatter HattertarGetByAlaplapID(int id) {
            return base.Channel.HattertarGetByAlaplapID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.AlaplapHatter> HattertarGetByAlaplapIDAsync(int id) {
            return base.Channel.HattertarGetByAlaplapIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.VideokartyaMon MonitorcsatoloGetByVideokartyaID(int id) {
            return base.Channel.MonitorcsatoloGetByVideokartyaID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.VideokartyaMon> MonitorcsatoloGetByVideokartyaIDAsync(int id) {
            return base.Channel.MonitorcsatoloGetByVideokartyaIDAsync(id);
        }
        
        public void InsertingVideokartyaDB(int csatolo_id, int mondb, int gyarto_id, int memoria_id, string megnev, int ar, int db, int meret, byte[] kep) {
            base.Channel.InsertingVideokartyaDB(csatolo_id, mondb, gyarto_id, memoria_id, megnev, ar, db, meret, kep);
        }
        
        public System.Threading.Tasks.Task InsertingVideokartyaDBAsync(int csatolo_id, int mondb, int gyarto_id, int memoria_id, string megnev, int ar, int db, int meret, byte[] kep) {
            return base.Channel.InsertingVideokartyaDBAsync(csatolo_id, mondb, gyarto_id, memoria_id, megnev, ar, db, meret, kep);
        }
        
        public void InsertingTapegysegDB(int gyarto_id, string megnev, int ar, int db, int telj, byte[] kep) {
            base.Channel.InsertingTapegysegDB(gyarto_id, megnev, ar, db, telj, kep);
        }
        
        public System.Threading.Tasks.Task InsertingTapegysegDBAsync(int gyarto_id, string megnev, int ar, int db, int telj, byte[] kep) {
            return base.Channel.InsertingTapegysegDBAsync(gyarto_id, megnev, ar, db, telj, kep);
        }
        
        public void InsertingSzamitogephazDB(int gyarto_id, string megnev, int ar, int db, byte[] kep) {
            base.Channel.InsertingSzamitogephazDB(gyarto_id, megnev, ar, db, kep);
        }
        
        public System.Threading.Tasks.Task InsertingSzamitogephazDBAsync(int gyarto_id, string megnev, int ar, int db, byte[] kep) {
            return base.Channel.InsertingSzamitogephazDBAsync(gyarto_id, megnev, ar, db, kep);
        }
        
        public void InsertingProcesszorDB(int gyarto_id, int foglalat_id, string meg, int ar, int db, int magok, int frekvencia, byte[] kep) {
            base.Channel.InsertingProcesszorDB(gyarto_id, foglalat_id, meg, ar, db, magok, frekvencia, kep);
        }
        
        public System.Threading.Tasks.Task InsertingProcesszorDBAsync(int gyarto_id, int foglalat_id, string meg, int ar, int db, int magok, int frekvencia, byte[] kep) {
            return base.Channel.InsertingProcesszorDBAsync(gyarto_id, foglalat_id, meg, ar, db, magok, frekvencia, kep);
        }
        
        public void InsertingMonitorDB(int gyarto_id, int csatolo_id, int felbontas_id, int meret_id, string megnev, int ar, int db, byte[] kep) {
            base.Channel.InsertingMonitorDB(gyarto_id, csatolo_id, felbontas_id, meret_id, megnev, ar, db, kep);
        }
        
        public System.Threading.Tasks.Task InsertingMonitorDBAsync(int gyarto_id, int csatolo_id, int felbontas_id, int meret_id, string megnev, int ar, int db, byte[] kep) {
            return base.Channel.InsertingMonitorDBAsync(gyarto_id, csatolo_id, felbontas_id, meret_id, megnev, ar, db, kep);
        }
        
        public void InsertingMemoriaDB(int gyarto_id, int foglalat_id, string megnevezes, int ar, int db, int meret, byte[] kep) {
            base.Channel.InsertingMemoriaDB(gyarto_id, foglalat_id, megnevezes, ar, db, meret, kep);
        }
        
        public System.Threading.Tasks.Task InsertingMemoriaDBAsync(int gyarto_id, int foglalat_id, string megnevezes, int ar, int db, int meret, byte[] kep) {
            return base.Channel.InsertingMemoriaDBAsync(gyarto_id, foglalat_id, megnevezes, ar, db, meret, kep);
        }
        
        public void InsertingEgerDB(int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db, byte[] kep) {
            base.Channel.InsertingEgerDB(gyarto_id, usb_id, ps2, megnevezes, ar, db, kep);
        }
        
        public System.Threading.Tasks.Task InsertingEgerDBAsync(int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db, byte[] kep) {
            return base.Channel.InsertingEgerDBAsync(gyarto_id, usb_id, ps2, megnevezes, ar, db, kep);
        }
        
        public void InsertingHattertarDB(int gyarto_id, int csatolo_id, int tipus_id, string megnevezes, int ar, int db, int meret, byte[] kep) {
            base.Channel.InsertingHattertarDB(gyarto_id, csatolo_id, tipus_id, megnevezes, ar, db, meret, kep);
        }
        
        public System.Threading.Tasks.Task InsertingHattertarDBAsync(int gyarto_id, int csatolo_id, int tipus_id, string megnevezes, int ar, int db, int meret, byte[] kep) {
            return base.Channel.InsertingHattertarDBAsync(gyarto_id, csatolo_id, tipus_id, megnevezes, ar, db, meret, kep);
        }
        
        public void InsertingBillentyuzetDB(int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db, byte[] kep) {
            base.Channel.InsertingBillentyuzetDB(gyarto_id, usb_id, ps2, megnevezes, ar, db, kep);
        }
        
        public System.Threading.Tasks.Task InsertingBillentyuzetDBAsync(int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db, byte[] kep) {
            return base.Channel.InsertingBillentyuzetDBAsync(gyarto_id, usb_id, ps2, megnevezes, ar, db, kep);
        }
        
        public void InsertingAlaplapDB(
                    int usb_id, 
                    int hattertar_id, 
                    int gyarto_id, 
                    int foglalat_id, 
                    int memoria_id, 
                    int vga_id, 
                    int pci_id, 
                    int mem_db, 
                    int vga_db, 
                    bool ps2, 
                    string megnevezes, 
                    int ar, 
                    int db, 
                    byte[] kep, 
                    int hatdb, 
                    int usbdb) {
            base.Channel.InsertingAlaplapDB(usb_id, hattertar_id, gyarto_id, foglalat_id, memoria_id, vga_id, pci_id, mem_db, vga_db, ps2, megnevezes, ar, db, kep, hatdb, usbdb);
        }
        
        public System.Threading.Tasks.Task InsertingAlaplapDBAsync(
                    int usb_id, 
                    int hattertar_id, 
                    int gyarto_id, 
                    int foglalat_id, 
                    int memoria_id, 
                    int vga_id, 
                    int pci_id, 
                    int mem_db, 
                    int vga_db, 
                    bool ps2, 
                    string megnevezes, 
                    int ar, 
                    int db, 
                    byte[] kep, 
                    int hatdb, 
                    int usbdb) {
            return base.Channel.InsertingAlaplapDBAsync(usb_id, hattertar_id, gyarto_id, foglalat_id, memoria_id, vga_id, pci_id, mem_db, vga_db, ps2, megnevezes, ar, db, kep, hatdb, usbdb);
        }
        
        public void InsertKep(byte[] kep) {
            base.Channel.InsertKep(kep);
        }
        
        public System.Threading.Tasks.Task InsertKepAsync(byte[] kep) {
            return base.Channel.InsertKepAsync(kep);
        }
        
        public void InsertVideokartya(int csatolo_id, int csatdb, int id, int gyarto_id, int memoria_id, string megnev, int ar, int db, int meret) {
            base.Channel.InsertVideokartya(csatolo_id, csatdb, id, gyarto_id, memoria_id, megnev, ar, db, meret);
        }
        
        public System.Threading.Tasks.Task InsertVideokartyaAsync(int csatolo_id, int csatdb, int id, int gyarto_id, int memoria_id, string megnev, int ar, int db, int meret) {
            return base.Channel.InsertVideokartyaAsync(csatolo_id, csatdb, id, gyarto_id, memoria_id, megnev, ar, db, meret);
        }
        
        public void InsertTapegyseg(int id, int gyarto_id, string megnev, int ar, int db, int telj) {
            base.Channel.InsertTapegyseg(id, gyarto_id, megnev, ar, db, telj);
        }
        
        public System.Threading.Tasks.Task InsertTapegysegAsync(int id, int gyarto_id, string megnev, int ar, int db, int telj) {
            return base.Channel.InsertTapegysegAsync(id, gyarto_id, megnev, ar, db, telj);
        }
        
        public void InsertSzamitogephaz(int id, int gyarto_id, string megnev, int ar, int db) {
            base.Channel.InsertSzamitogephaz(id, gyarto_id, megnev, ar, db);
        }
        
        public System.Threading.Tasks.Task InsertSzamitogephazAsync(int id, int gyarto_id, string megnev, int ar, int db) {
            return base.Channel.InsertSzamitogephazAsync(id, gyarto_id, megnev, ar, db);
        }
        
        public void InsertMonitor(int id, int gyarto_id, int csatolo_id, int felbontas_id, int meret_id, string megnev, int ar, int db) {
            base.Channel.InsertMonitor(id, gyarto_id, csatolo_id, felbontas_id, meret_id, megnev, ar, db);
        }
        
        public System.Threading.Tasks.Task InsertMonitorAsync(int id, int gyarto_id, int csatolo_id, int felbontas_id, int meret_id, string megnev, int ar, int db) {
            return base.Channel.InsertMonitorAsync(id, gyarto_id, csatolo_id, felbontas_id, meret_id, megnev, ar, db);
        }
        
        public void InsertMemoria(int id, int gyarto_id, int foglalat_id, string megnevezes, int ar, int db, int meret) {
            base.Channel.InsertMemoria(id, gyarto_id, foglalat_id, megnevezes, ar, db, meret);
        }
        
        public System.Threading.Tasks.Task InsertMemoriaAsync(int id, int gyarto_id, int foglalat_id, string megnevezes, int ar, int db, int meret) {
            return base.Channel.InsertMemoriaAsync(id, gyarto_id, foglalat_id, megnevezes, ar, db, meret);
        }
        
        public void InsertHattertar(int id, int gyarto_id, int csatolo_id, int tipus_id, string megnevezes, int ar, int db, int meret) {
            base.Channel.InsertHattertar(id, gyarto_id, csatolo_id, tipus_id, megnevezes, ar, db, meret);
        }
        
        public System.Threading.Tasks.Task InsertHattertarAsync(int id, int gyarto_id, int csatolo_id, int tipus_id, string megnevezes, int ar, int db, int meret) {
            return base.Channel.InsertHattertarAsync(id, gyarto_id, csatolo_id, tipus_id, megnevezes, ar, db, meret);
        }
        
        public void InsertEger(int id, int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db) {
            base.Channel.InsertEger(id, gyarto_id, usb_id, ps2, megnevezes, ar, db);
        }
        
        public System.Threading.Tasks.Task InsertEgerAsync(int id, int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db) {
            return base.Channel.InsertEgerAsync(id, gyarto_id, usb_id, ps2, megnevezes, ar, db);
        }
        
        public void InsertCPU(int id, int gyarto_id, int foglalat_id, string meg, int ar, int db, int magok, int frekvencia) {
            base.Channel.InsertCPU(id, gyarto_id, foglalat_id, meg, ar, db, magok, frekvencia);
        }
        
        public System.Threading.Tasks.Task InsertCPUAsync(int id, int gyarto_id, int foglalat_id, string meg, int ar, int db, int magok, int frekvencia) {
            return base.Channel.InsertCPUAsync(id, gyarto_id, foglalat_id, meg, ar, db, magok, frekvencia);
        }
        
        public void InsertBillentyuzet(int id, int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db) {
            base.Channel.InsertBillentyuzet(id, gyarto_id, usb_id, ps2, megnevezes, ar, db);
        }
        
        public System.Threading.Tasks.Task InsertBillentyuzetAsync(int id, int gyarto_id, int usb_id, bool ps2, string megnevezes, int ar, int db) {
            return base.Channel.InsertBillentyuzetAsync(id, gyarto_id, usb_id, ps2, megnevezes, ar, db);
        }
        
        public ComputerStore.DTO.Types.MonitorCsatoloTipus[] MonitorCsatoloTipusGet() {
            return base.Channel.MonitorCsatoloTipusGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorCsatoloTipus[]> MonitorCsatoloTipusGetAsync() {
            return base.Channel.MonitorCsatoloTipusGetAsync();
        }
        
        public ComputerStore.DTO.Types.MonitorFelbontas[] MonitorFelbontasGet() {
            return base.Channel.MonitorFelbontasGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorFelbontas[]> MonitorFelbontasGetAsync() {
            return base.Channel.MonitorFelbontasGetAsync();
        }
        
        public ComputerStore.DTO.Types.MonitorMeret[] MonitorMeretGet() {
            return base.Channel.MonitorMeretGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorMeret[]> MonitorMeretGetAsync() {
            return base.Channel.MonitorMeretGetAsync();
        }
        
        public ComputerStore.DTO.Types.HattertarCsatoloTipus[] HattertarCsatoloTipusGet() {
            return base.Channel.HattertarCsatoloTipusGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarCsatoloTipus[]> HattertarCsatoloTipusGetAsync() {
            return base.Channel.HattertarCsatoloTipusGetAsync();
        }
        
        public ComputerStore.DTO.Types.HattertarTipus[] HattertarTipusGet() {
            return base.Channel.HattertarTipusGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarTipus[]> HattertarTipusGetAsync() {
            return base.Channel.HattertarTipusGetAsync();
        }
        
        public ComputerStore.DTO.Types.UsbTipus[] UsbGet() {
            return base.Channel.UsbGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.UsbTipus[]> UsbGetAsync() {
            return base.Channel.UsbGetAsync();
        }
        
        public void InsertAlaplap(
                    int csatolo_id, 
                    int usb_id, 
                    int usbdb, 
                    int hatdb, 
                    int id, 
                    int gyarto_id, 
                    int foglalat_id, 
                    int memoria_id, 
                    int vga_id, 
                    int pci_id, 
                    int mem_db, 
                    int vga_db, 
                    bool ps2, 
                    string megnevezes, 
                    int ar, 
                    int db) {
            base.Channel.InsertAlaplap(csatolo_id, usb_id, usbdb, hatdb, id, gyarto_id, foglalat_id, memoria_id, vga_id, pci_id, mem_db, vga_db, ps2, megnevezes, ar, db);
        }
        
        public System.Threading.Tasks.Task InsertAlaplapAsync(
                    int csatolo_id, 
                    int usb_id, 
                    int usbdb, 
                    int hatdb, 
                    int id, 
                    int gyarto_id, 
                    int foglalat_id, 
                    int memoria_id, 
                    int vga_id, 
                    int pci_id, 
                    int mem_db, 
                    int vga_db, 
                    bool ps2, 
                    string megnevezes, 
                    int ar, 
                    int db) {
            return base.Channel.InsertAlaplapAsync(csatolo_id, usb_id, usbdb, hatdb, id, gyarto_id, foglalat_id, memoria_id, vga_id, pci_id, mem_db, vga_db, ps2, megnevezes, ar, db);
        }
        
        public ComputerStore.DTO.Types.PciExpressTipus[] PciGet() {
            return base.Channel.PciGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PciExpressTipus[]> PciGetAsync() {
            return base.Channel.PciGetAsync();
        }
        
        public ComputerStore.DTO.Types.VgaCsatoloFeluletTipus[] VgaGet() {
            return base.Channel.VgaGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.VgaCsatoloFeluletTipus[]> VgaGetAsync() {
            return base.Channel.VgaGetAsync();
        }
        
        public ComputerStore.DTO.Types.MemoriaTipus[] MemoriaGet() {
            return base.Channel.MemoriaGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MemoriaTipus[]> MemoriaGetAsync() {
            return base.Channel.MemoriaGetAsync();
        }
        
        public ComputerStore.DTO.Types.ProcesszorFoglalatTipus[] ProcesszorGet() {
            return base.Channel.ProcesszorGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus[]> ProcesszorGetAsync() {
            return base.Channel.ProcesszorGetAsync();
        }
        
        public ComputerStore.DTO.Types.AlkatreszGyarto[] GyartoGet() {
            return base.Channel.GyartoGet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.AlkatreszGyarto[]> GyartoGetAsync() {
            return base.Channel.GyartoGetAsync();
        }
        
        public ComputerStore.DTO.Types.Fokategoriatipus[] GetAlaplap() {
            return base.Channel.GetAlaplap();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetAlaplapAsync() {
            return base.Channel.GetAlaplapAsync();
        }
        
        public ComputerStore.DTO.Types.Fokategoriatipus[] GetBillentyuzet() {
            return base.Channel.GetBillentyuzet();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetBillentyuzetAsync() {
            return base.Channel.GetBillentyuzetAsync();
        }
        
        public ComputerStore.DTO.Types.Fokategoriatipus[] GetEger() {
            return base.Channel.GetEger();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetEgerAsync() {
            return base.Channel.GetEgerAsync();
        }
        
        public ComputerStore.DTO.Types.Fokategoriatipus[] GetHattertar() {
            return base.Channel.GetHattertar();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetHattertarAsync() {
            return base.Channel.GetHattertarAsync();
        }
        
        public ComputerStore.DTO.Types.Fokategoriatipus[] GetMemoria() {
            return base.Channel.GetMemoria();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetMemoriaAsync() {
            return base.Channel.GetMemoriaAsync();
        }
        
        public ComputerStore.DTO.Types.Fokategoriatipus[] GetMonitor() {
            return base.Channel.GetMonitor();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetMonitorAsync() {
            return base.Channel.GetMonitorAsync();
        }
        
        public ComputerStore.DTO.Types.Fokategoriatipus[] GetProcesszor() {
            return base.Channel.GetProcesszor();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetProcesszorAsync() {
            return base.Channel.GetProcesszorAsync();
        }
        
        public ComputerStore.DTO.Types.Fokategoriatipus[] GetSzamitogephaz() {
            return base.Channel.GetSzamitogephaz();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetSzamitogephazAsync() {
            return base.Channel.GetSzamitogephazAsync();
        }
        
        public ComputerStore.DTO.Types.Fokategoriatipus[] GetTapegyseg() {
            return base.Channel.GetTapegyseg();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetTapegysegAsync() {
            return base.Channel.GetTapegysegAsync();
        }
        
        public ComputerStore.DTO.Types.Fokategoriatipus[] GetVideokartya() {
            return base.Channel.GetVideokartya();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Fokategoriatipus[]> GetVideokartyaAsync() {
            return base.Channel.GetVideokartyaAsync();
        }
        
        public ComputerStore.DTO.Types.ProcesszorFoglalatTipus[] ProcFoglalat_GetKategoriak() {
            return base.Channel.ProcFoglalat_GetKategoriak();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus[]> ProcFoglalat_GetKategoriakAsync() {
            return base.Channel.ProcFoglalat_GetKategoriakAsync();
        }
        
        public ComputerStore.DTO.Types.ProcesszorFoglalatTipus[] ProcFoglalat_GetKategoriakByName(string name) {
            return base.Channel.ProcFoglalat_GetKategoriakByName(name);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus[]> ProcFoglalat_GetKategoriakByNameAsync(string name) {
            return base.Channel.ProcFoglalat_GetKategoriakByNameAsync(name);
        }
        
        public ComputerStore.DTO.Types.ProcesszorFoglalatTipus ProcFoglalat_GetKategoriaByID(int id) {
            return base.Channel.ProcFoglalat_GetKategoriaByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.ProcesszorFoglalatTipus> ProcFoglalat_GetKategoriaByIDAsync(int id) {
            return base.Channel.ProcFoglalat_GetKategoriaByIDAsync(id);
        }
        
        public void ProcFoglalat_Update(ComputerStore.DTO.Types.ProcesszorFoglalatTipus type) {
            base.Channel.ProcFoglalat_Update(type);
        }
        
        public System.Threading.Tasks.Task ProcFoglalat_UpdateAsync(ComputerStore.DTO.Types.ProcesszorFoglalatTipus type) {
            return base.Channel.ProcFoglalat_UpdateAsync(type);
        }
        
        public void ProcFoglalat_Add(ComputerStore.DTO.Types.ProcesszorFoglalatTipus type) {
            base.Channel.ProcFoglalat_Add(type);
        }
        
        public System.Threading.Tasks.Task ProcFoglalat_AddAsync(ComputerStore.DTO.Types.ProcesszorFoglalatTipus type) {
            return base.Channel.ProcFoglalat_AddAsync(type);
        }
        
        public ComputerStore.DTO.Types.MemoriaTipus[] MemoriaFoglalat_GetKaegoriak() {
            return base.Channel.MemoriaFoglalat_GetKaegoriak();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MemoriaTipus[]> MemoriaFoglalat_GetKaegoriakAsync() {
            return base.Channel.MemoriaFoglalat_GetKaegoriakAsync();
        }
        
        public ComputerStore.DTO.Types.MemoriaTipus[] MemoriaFoglalat_GetKaegoriakByName(string name) {
            return base.Channel.MemoriaFoglalat_GetKaegoriakByName(name);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MemoriaTipus[]> MemoriaFoglalat_GetKaegoriakByNameAsync(string name) {
            return base.Channel.MemoriaFoglalat_GetKaegoriakByNameAsync(name);
        }
        
        public ComputerStore.DTO.Types.MemoriaTipus MemoriaFoglalat_GetKategoriaByID(int id) {
            return base.Channel.MemoriaFoglalat_GetKategoriaByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MemoriaTipus> MemoriaFoglalat_GetKategoriaByIDAsync(int id) {
            return base.Channel.MemoriaFoglalat_GetKategoriaByIDAsync(id);
        }
        
        public void MemoriaFoglalat_Update(ComputerStore.DTO.Types.MemoriaTipus type) {
            base.Channel.MemoriaFoglalat_Update(type);
        }
        
        public System.Threading.Tasks.Task MemoriaFoglalat_UpdateAsync(ComputerStore.DTO.Types.MemoriaTipus type) {
            return base.Channel.MemoriaFoglalat_UpdateAsync(type);
        }
        
        public void MemoriaFoglalat_Add(ComputerStore.DTO.Types.MemoriaTipus type) {
            base.Channel.MemoriaFoglalat_Add(type);
        }
        
        public System.Threading.Tasks.Task MemoriaFoglalat_AddAsync(ComputerStore.DTO.Types.MemoriaTipus type) {
            return base.Channel.MemoriaFoglalat_AddAsync(type);
        }
        
        public ComputerStore.DTO.Types.UsbTipus[] UsbTipus_GetKaegoriak() {
            return base.Channel.UsbTipus_GetKaegoriak();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.UsbTipus[]> UsbTipus_GetKaegoriakAsync() {
            return base.Channel.UsbTipus_GetKaegoriakAsync();
        }
        
        public ComputerStore.DTO.Types.UsbTipus[] UsbTipus_GetKaegoriakByName(string name) {
            return base.Channel.UsbTipus_GetKaegoriakByName(name);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.UsbTipus[]> UsbTipus_GetKaegoriakByNameAsync(string name) {
            return base.Channel.UsbTipus_GetKaegoriakByNameAsync(name);
        }
        
        public void UsbTipus_Update(ComputerStore.DTO.Types.UsbTipus type) {
            base.Channel.UsbTipus_Update(type);
        }
        
        public System.Threading.Tasks.Task UsbTipus_UpdateAsync(ComputerStore.DTO.Types.UsbTipus type) {
            return base.Channel.UsbTipus_UpdateAsync(type);
        }
        
        public void UsbTipus_Add(ComputerStore.DTO.Types.UsbTipus type) {
            base.Channel.UsbTipus_Add(type);
        }
        
        public System.Threading.Tasks.Task UsbTipus_AddAsync(ComputerStore.DTO.Types.UsbTipus type) {
            return base.Channel.UsbTipus_AddAsync(type);
        }
        
        public ComputerStore.DTO.Types.UsbTipus UsbTipus_GetKategoriaByID(int id) {
            return base.Channel.UsbTipus_GetKategoriaByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.UsbTipus> UsbTipus_GetKategoriaByIDAsync(int id) {
            return base.Channel.UsbTipus_GetKategoriaByIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.HattertarTipus[] HattertatTipus_GetKaegoriak() {
            return base.Channel.HattertatTipus_GetKaegoriak();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarTipus[]> HattertatTipus_GetKaegoriakAsync() {
            return base.Channel.HattertatTipus_GetKaegoriakAsync();
        }
        
        public ComputerStore.DTO.Types.HattertarTipus[] HattertatTipus_GetKaegoriakByName(string name) {
            return base.Channel.HattertatTipus_GetKaegoriakByName(name);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarTipus[]> HattertatTipus_GetKaegoriakByNameAsync(string name) {
            return base.Channel.HattertatTipus_GetKaegoriakByNameAsync(name);
        }
        
        public ComputerStore.DTO.Types.HattertarTipus HattertatTipus_GetKategoriaByID(int id) {
            return base.Channel.HattertatTipus_GetKategoriaByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarTipus> HattertatTipus_GetKategoriaByIDAsync(int id) {
            return base.Channel.HattertatTipus_GetKategoriaByIDAsync(id);
        }
        
        public void HattertatTipus_Update(ComputerStore.DTO.Types.HattertarTipus type) {
            base.Channel.HattertatTipus_Update(type);
        }
        
        public System.Threading.Tasks.Task HattertatTipus_UpdateAsync(ComputerStore.DTO.Types.HattertarTipus type) {
            return base.Channel.HattertatTipus_UpdateAsync(type);
        }
        
        public void HattertatTipus_Add(ComputerStore.DTO.Types.HattertarTipus type) {
            base.Channel.HattertatTipus_Add(type);
        }
        
        public System.Threading.Tasks.Task HattertatTipus_AddAsync(ComputerStore.DTO.Types.HattertarTipus type) {
            return base.Channel.HattertatTipus_AddAsync(type);
        }
        
        public ComputerStore.DTO.Types.HattertarCsatoloTipus[] HattertatCsatoloTipus_GetKaegoriak() {
            return base.Channel.HattertatCsatoloTipus_GetKaegoriak();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarCsatoloTipus[]> HattertatCsatoloTipus_GetKaegoriakAsync() {
            return base.Channel.HattertatCsatoloTipus_GetKaegoriakAsync();
        }
        
        public ComputerStore.DTO.Types.HattertarCsatoloTipus[] HattertatCsatoloTipus_GetKaegoriakByName(string name) {
            return base.Channel.HattertatCsatoloTipus_GetKaegoriakByName(name);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarCsatoloTipus[]> HattertatCsatoloTipus_GetKaegoriakByNameAsync(string name) {
            return base.Channel.HattertatCsatoloTipus_GetKaegoriakByNameAsync(name);
        }
        
        public ComputerStore.DTO.Types.HattertarCsatoloTipus HattertatCsatoloTipus_GetKategoriaByID(int id) {
            return base.Channel.HattertatCsatoloTipus_GetKategoriaByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.HattertarCsatoloTipus> HattertatCsatoloTipus_GetKategoriaByIDAsync(int id) {
            return base.Channel.HattertatCsatoloTipus_GetKategoriaByIDAsync(id);
        }
        
        public void HattertatCsatoloTipus_Update(ComputerStore.DTO.Types.HattertarCsatoloTipus type) {
            base.Channel.HattertatCsatoloTipus_Update(type);
        }
        
        public System.Threading.Tasks.Task HattertatCsatoloTipus_UpdateAsync(ComputerStore.DTO.Types.HattertarCsatoloTipus type) {
            return base.Channel.HattertatCsatoloTipus_UpdateAsync(type);
        }
        
        public void HattertatCsatoloTipus_Add(ComputerStore.DTO.Types.HattertarCsatoloTipus type) {
            base.Channel.HattertatCsatoloTipus_Add(type);
        }
        
        public System.Threading.Tasks.Task HattertatCsatoloTipus_AddAsync(ComputerStore.DTO.Types.HattertarCsatoloTipus type) {
            return base.Channel.HattertatCsatoloTipus_AddAsync(type);
        }
        
        public ComputerStore.DTO.Types.MonitorFelbontas[] MonitorFelbontasTipus_GetKaegoriak() {
            return base.Channel.MonitorFelbontasTipus_GetKaegoriak();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorFelbontas[]> MonitorFelbontasTipus_GetKaegoriakAsync() {
            return base.Channel.MonitorFelbontasTipus_GetKaegoriakAsync();
        }
        
        public ComputerStore.DTO.Types.MonitorFelbontas[] MonitorFelbontasTipus_GetKaegoriakByName(string felbontas) {
            return base.Channel.MonitorFelbontasTipus_GetKaegoriakByName(felbontas);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorFelbontas[]> MonitorFelbontasTipus_GetKaegoriakByNameAsync(string felbontas) {
            return base.Channel.MonitorFelbontasTipus_GetKaegoriakByNameAsync(felbontas);
        }
        
        public ComputerStore.DTO.Types.MonitorFelbontas MonitorFelbontasTipus_GetKategoriaByID(int id) {
            return base.Channel.MonitorFelbontasTipus_GetKategoriaByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorFelbontas> MonitorFelbontasTipus_GetKategoriaByIDAsync(int id) {
            return base.Channel.MonitorFelbontasTipus_GetKategoriaByIDAsync(id);
        }
        
        public void MonitorFelbontasTipus_Update(ComputerStore.DTO.Types.MonitorFelbontas type) {
            base.Channel.MonitorFelbontasTipus_Update(type);
        }
        
        public System.Threading.Tasks.Task MonitorFelbontasTipus_UpdateAsync(ComputerStore.DTO.Types.MonitorFelbontas type) {
            return base.Channel.MonitorFelbontasTipus_UpdateAsync(type);
        }
        
        public void MonitorFelbontasTipus_Add(ComputerStore.DTO.Types.MonitorFelbontas type) {
            base.Channel.MonitorFelbontasTipus_Add(type);
        }
        
        public System.Threading.Tasks.Task MonitorFelbontasTipus_AddAsync(ComputerStore.DTO.Types.MonitorFelbontas type) {
            return base.Channel.MonitorFelbontasTipus_AddAsync(type);
        }
        
        public ComputerStore.DTO.Types.MonitorMeret[] MonitorMeretTipus_GetKaegoriak() {
            return base.Channel.MonitorMeretTipus_GetKaegoriak();
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorMeret[]> MonitorMeretTipus_GetKaegoriakAsync() {
            return base.Channel.MonitorMeretTipus_GetKaegoriakAsync();
        }
        
        public ComputerStore.DTO.Types.MonitorMeret[] MonitorMeretTipus_GetKaegoriakByName(string meret) {
            return base.Channel.MonitorMeretTipus_GetKaegoriakByName(meret);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorMeret[]> MonitorMeretTipus_GetKaegoriakByNameAsync(string meret) {
            return base.Channel.MonitorMeretTipus_GetKaegoriakByNameAsync(meret);
        }
        
        public ComputerStore.DTO.Types.MonitorMeret MonitorMeretTipus_GetKategoriaByID(int id) {
            return base.Channel.MonitorMeretTipus_GetKategoriaByID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.MonitorMeret> MonitorMeretTipus_GetKategoriaByIDAsync(int id) {
            return base.Channel.MonitorMeretTipus_GetKategoriaByIDAsync(id);
        }
        
        public void MonitorMeretTipus_Update(ComputerStore.DTO.Types.MonitorMeret meret) {
            base.Channel.MonitorMeretTipus_Update(meret);
        }
        
        public System.Threading.Tasks.Task MonitorMeretTipus_UpdateAsync(ComputerStore.DTO.Types.MonitorMeret meret) {
            return base.Channel.MonitorMeretTipus_UpdateAsync(meret);
        }
        
        public void MonitorMeretTipus_Add(ComputerStore.DTO.Types.MonitorMeret meret) {
            base.Channel.MonitorMeretTipus_Add(meret);
        }
        
        public System.Threading.Tasks.Task MonitorMeretTipus_AddAsync(ComputerStore.DTO.Types.MonitorMeret meret) {
            return base.Channel.MonitorMeretTipus_AddAsync(meret);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Alaplap> Alaplap_GetByFoglalatID(int id, int pageNumber, int pageSize) {
            return base.Channel.Alaplap_GetByFoglalatID(id, pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Alaplap>> Alaplap_GetByFoglalatIDAsync(int id, int pageNumber, int pageSize) {
            return base.Channel.Alaplap_GetByFoglalatIDAsync(id, pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.Alaplap[] Alaplap_GetListByFoglalatID(int id) {
            return base.Channel.Alaplap_GetListByFoglalatID(id);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.Alaplap[]> Alaplap_GetListByFoglalatIDAsync(int id) {
            return base.Channel.Alaplap_GetListByFoglalatIDAsync(id);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Alaplap> Alaplap_GetByMemoriaID(int id, int pageNumber, int pageSize) {
            return base.Channel.Alaplap_GetByMemoriaID(id, pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Alaplap>> Alaplap_GetByMemoriaIDAsync(int id, int pageNumber, int pageSize) {
            return base.Channel.Alaplap_GetByMemoriaIDAsync(id, pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Billentyuzet> Billentyuzet_GetByUsbID(int id, int pageNumber, int pageSize) {
            return base.Channel.Billentyuzet_GetByUsbID(id, pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Billentyuzet>> Billentyuzet_GetByUsbIDAsync(int id, int pageNumber, int pageSize) {
            return base.Channel.Billentyuzet_GetByUsbIDAsync(id, pageNumber, pageSize);
        }
        
        public ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Billentyuzet> Billentyuzet_GetByPs(int pageNumber, int pageSize) {
            return base.Channel.Billentyuzet_GetByPs(pageNumber, pageSize);
        }
        
        public System.Threading.Tasks.Task<ComputerStore.DTO.Types.PageableList<ComputerStore.DTO.Types.Billentyuzet>> Billentyuzet_GetByPsAsync(int pageNumber, int pageSize) {
            return base.Channel.Billentyuzet_GetByPsAsync(pageNumber, pageSize);
        }
    }
}
